[{"id":"e3ea84813e0a0c7cb21ab3a7eaf45bb0","human_readable_id":"1","text":"软件生命周期(Software Life Cycle,SLC)是软件的产生直到报废或停止使用的生命周期。软件生命周期内有问题定义、可行性分析、总体描述、系统设计、编码、调试和测试、验收与运行、维护升级到废弃等阶段，也有将以上阶段的活动组合在内的迭代阶段，即迭代作为生命周期的阶段。\n\n## 简介\n软件生命周期又称为软件生存周期或系统开发生命周期，是软件的产生直到报废的生命周期，周期内有问题定义、可行性分析、总体描述、系统设计、编码、调试和测试、验收与运行、维护升级到废弃等阶段，这种按时间分程的思想方法是软件工程中的一种思想原则，即按部就班、逐步推进，每个阶段都要有定义、工作、审查、形成文档以供交流或备查，以提高软件的质量。但随着新的面向对象的设计方法和技术的成熟，软件生命周期设计方法的指导意义正在逐步减少。\n生命周期的每一个周期都有确定的任务，并产生一定规格的文档（资料），提交给下一个周期作为继续工作的依据。按照软件的生命周期，软件的开发不再只单单强调“编码”，而是概括了软件开发的全过程。软件工程要求每一周期工作的开始只能必须是建立在前一个周期结果“正确”前提上的延续；因此，每一周期都是按“活动-结果-审核-再活动-直至结果正确”循环往复进展的。\n软件生命周期是指软件从产生到最终被废弃的生命周期，可以分为三大阶段，分别为定义问题、软件开发和软件维护，其中问题定义中的需求分析是软件开发和维护的前提，它直接决定软件项目的成败。在进行软件需求分析时，要明确需求分析的目标，采用合理的需求分析方法和工具，全面且正确的进行需求分析。获取需求时会受很多因素的影响，从而导致需求不能正确表达用户需求或者需求分析不够正确等，所以需求获取时要选择合理的获取方法，同时对需求要进行正确深入的分析，进而采用适合的工具来对需求进行说明和描述，这样对于后续的软件设计、编码、测试和维护打下坚实的基础。\n软件需求简单的说就是研究“做什么”的问题，在现实工作过程中，应该考虑除功能需求之外的业务需求和用户需求。业务需求主要反映某机构或者客户对软件产品高层次的目标要求；用户需求是指用户使用产品必须完成的任务；功能需求指开发者不得不完成的软件功能，可以说功能需求满足了，业务需求也就达到了，需求分析并不考虑怎么做的问题。\n\n## 阶段\n可行性研究阶段：同任何事物一样，一个软件产品或软件系统也要经历孕育、诞生、成长、成熟、衰亡等阶段，一般称为软件生存周期（软件生命周期）。把整个软件生存周期划分为若干阶段，使得每个阶段有明确的任务，使规模大，结构复杂和管理复杂的软件开发变的容易控制和管理。可以将软件生命周期概括为软件计划与可行性研究阶段（问题定义、可行性研究）、需求分析阶段、软件设计阶段（概要设计和详细设计）、软件编码阶段、软件测试阶段和软件运行与维护阶段。\n软件计划与可行性研究阶段（问题定义、可行性研究）：此阶段是软件开发方与需求方共同讨论，主要确定软件的开发目","n_tokens":"1200","document_ids":"['10452f8edcb20cd5d2c545363b87a9c9']","entity_ids":"['80024f39b3254421ae1fb3a05c206b1f' '9832e5d8139f440a9ce28e7c7e1f6fc6'\n '918093b4f4ac4930bf68f82f0675b7db' '94d3cf2b91114dc8af5b1dcbbb71aae0'\n '41ad9687577f41c2a3e63ab7ec29065a' '214cc82cc3a44e6f93073c7c2a78494b'\n '696f89c9a76b406390472a88658c9ba1' '32a7af1b625e408e9ed7577facf50fe5'\n '06690b936a434fa8b070a6e6f806e688' 'b093657f589e4e7e87423b6ff594891c'\n '0448ee3708864d5b9fe4a4c29862bae3' 'e057c466a32f4f45b76878ece317f025'\n 'b2fa600393694e26abd600d8eefcf8d7']","relationship_ids":"['2cdaba0a7c2a4d5ab11b7b2817a3808f' '1de5ce212c3340b987df223a09995dea'\n '77866c2021b2467393464c804fc79848' '1e808b28a8dd4964ac3ee984af381348'\n 'c450777403ba445f9d18e926047d5821' '43b84a798b35407db2f1eba1f63ff69d'\n '168dfbc70968440e919aa5e8359cca0a' 'a38ccad8d25649a499c66e471805eb70'\n '346872246d964f1bbe4f3d875cb45aeb' 'e8cafd9dcbc0405996bf06076c2f45ab'\n '4d749ac04e4d4737906771ff366d6a40' 'f17e010f9eda46649b3c89edd4a971d6'\n '4b1c94d10c3b49e6807981e2d17786d6' '2e144e4a869e49d5b6e1494a54c6f600'\n '27164d246fd44440a23201d5f8d43250' 'c6631ada2cf04e0da12f72257a673273'\n '4b92dbabc2fa48529ecdaef7504c500b' '40448a9e6e0649d3999c2a1946deded0'\n '43a1a3909bbb4727bd20f9af7142dcf1' '63371db4a2f7457db86a35c493c1b94e'\n '54dcfdc113c44fdeb100036bef0b9331' 'fc52bf6547e34b56a6f22c94d3bd3c28'\n '97de41ffd33e426ea7d38ebac2673fdf']"},{"id":"15337c81cac9b921020cb82f29f865c0","human_readable_id":"2","text":"段（概要设计和详细设计）、软件编码阶段、软件测试阶段和软件运行与维护阶段。\n软件计划与可行性研究阶段（问题定义、可行性研究）：此阶段是软件开发方与需求方共同讨论，主要确定软件的开发目标及其可行性。\n软件生命周期软件生命周期需求分析阶段：在确定软件开发可行的情况下，对软件需要实现的各个功能进行详细分析。需求分析阶段是一个很重要的阶段，也是在整个软件开发过程中不断变化和深入的阶段，能够为整个软件开发项目的成功打下良好的基础。\n软件设计阶段（概要设计和详细设计）：主要根据需求分析的结果，对整个软件系统进行设计，如系统框架设计，数据库设计等等。软件编码阶段：是将软件设计的结果转换成计算机可运行的程序代码。在程序编码中必须要制定统一，符合标准的编写规范。以保证程序的可读性，易维护性，提高程序的运行效率。\n软件测试阶段：在软件设计完成后要经过严密的测试，以发现软件在整个设计过程中存在的问题并加以纠正。\n软件运行和维护阶段：是软件生命周期中持续时间最长的阶段，包括纠错性维护和改进性维护两个方面。\n\n## 模型分类\n从概念提出的那一刻开始，软件产品就进入了软件生命周期。在经历需求、分析、设计、实现、部署后，软件将被使用并进入维护阶段，直到最后由于缺少维护费用而逐渐消亡。这样的一个过程，称为\"生命周期模型\"（Life Cycle Model）。\n典型的几种生命周期模型包括瀑布模型、快速原型模型、迭代模型。\n\n### 瀑布模型\n（Waterfall Model）首先由Royce提出。该模型由于酷似瀑布闻名。在该模型中，首先确定需求，并接受客户和SQA小组的验证。然后拟定规格说明，同样通过验证后，进入计划阶段…可以看出，瀑布模型中至关重要的一点是只有当一个阶段的文档已经编制好并获得SQA小组的认可才可以进入下一个阶段。这样，瀑布模型通过强制性的要求提供规约文档来确保每个阶段都能很好的完成任务。但是实际上往往难以办到，因为整个的模型几乎都是以文档驱动的，这对于非专业的用户来说是难以阅读和理解的。想象一下，你去买衣服的时候，售货员给你出示的是一本厚厚的服装规格说明，你会有什么样的感触。虽然瀑布模型有很多很好的思想可以借鉴，但是在过程能力上有天生的缺陷。\n然而轻易抛弃瀑布模型的观点也是非常错误的，瀑布模型还是所有软件开发模型的基础，体现了软件开发的本质过程。对于一些大型 的软件项目，试图过于简化瀑布的前期的需求和设计阶段，用一个简单的原型或者迭代来模拟未来的系统，并试图帮助确认和挖掘客户的需求，是不可能的，不仅此时离客户的最终需求和隔山万千重，系统的架构也会随着过程而有很大被抛弃和大幅调整的过程，原型也就起不到原型的作用，成本和时间反而浪费，所以前期的功课还是少不了的，尤其对于复杂系统。即使对于简单如定制一件衣服","n_tokens":"1200","document_ids":"['10452f8edcb20cd5d2c545363b87a9c9']","entity_ids":"['80024f39b3254421ae1fb3a05c206b1f' '1d6f22f3bc014aa7bf8b345f9641ba4a'\n '9858c92620a2477b9e555af81046acf2' '86de61b9e31b43ceb19184fc4b65d0e7'\n 'aaf44f3d636445489cb96de1a20c7895' '8cf95354695441088a6b16132226b997'\n '5ee09ffc7045401785e3e8934d7bcb3c' '9355b4d81dec4ef3a3c08ac753414587'\n 'ffb25c8850d04eccaba7d0b9f00272ce' 'dd50f8dfcbf0447c8144093edf565817'\n '5fefbe7a1ae64558b671ee666a75c07f' '5a93f4eb2a954d0485f8910691b1129b'\n '73829cdef8784991a318a60771d33422']","relationship_ids":"['5556ac5ff3c44c65b5c69c767518693f' 'b51918a1876940b79283d9dcf0cb51d0'\n '554c619ec62c4ecaa7c144fa7c485724' '8bda426785814c019cbbee5032e02459'\n '36c329f0685941ccb521265fd1328718' '76eaa58168c84580aad1d18d233287cf'\n '47ef3107b93f4d18ba74438ca354520c' 'f0490e87c78e46439a74432d62dc7579'\n '6ebb24ba53d24429a3337508e144e107' '6f267e25e1a54bc49fc07d9f253ec071'\n '3adca8dcfa244dfb8fb0b382860b34ee' '1af3ae264fd74702becbf3b84d00c195'\n '0c9ca41f3da9487aa91861d6cbfa08c2' '01437c5266ef4f089a8068d30bb77720']"},{"id":"a1687cc4d33c39cb84c46a5a932302f0","human_readable_id":"3","text":"千重，系统的架构也会随着过程而有很大被抛弃和大幅调整的过程，原型也就起不到原型的作用，成本和时间反而浪费，所以前期的功课还是少不了的，尤其对于复杂系统。即使对于简单如定制一件衣服，在给客户提出修改的时候，它要基本是一件衣服，而不是几块布片，否则客户无从提出进一步的需求，前期的功夫也是白费的。\n\n### 迭代式模型\n图1 软件生命周期图1 软件生命周期迭代式模型是是RUP（Rational Unified Process，统一软件开发过程，统一软件过程)推荐的周期模型，也是我们在这个系列文章讨论的基础。在RUP中，迭代被定义为：迭代包括产生产品发布（稳定、可执行的产品版本）的全部开发活动和要使用该发布必需的所有其他外围元素。所以，在某种程度上，开发迭代是一次完整地经过所有工作流程的过程：（至少包括）需求工作流程、分析设计工作流程、实施工作流程和测试工作流程。实质上，它类似小型的瀑布式项目。RUP认为，所有的阶段（需求及其它）都可以细分为迭代。每一次的迭代都会产生一个可以发布的产品，这个产品是最终产品的一个子集。迭代的思想如图1所示。\n迭代和瀑布的最大的差别就在于风险的暴露时间上。“任何项目都会涉及到一定的风险。如果能在生命周期中尽早确保避免了风险，那么您的计划自然会更趋精确。有许多风险直到已准备集成系统时才被发现。不管开发团队经验如何，都绝不可能预知所有的风险。”\n由于瀑布模型的特点（文档是主体），很多的问题在最后才会暴露出来，为了解决这些问题的风险是巨大的。\"在迭代式生命周期中，您需要根据主要风险列表选择要在迭代中开发的新的增量内容。每次迭代完成时都会生成一个经过测试的可执行文件，这样就可以核实是否已经降低了目标风险。\"\n\n### 快速原型模型\n快速原型（Rapid Prototype）模型在功能上等价于产品的一个子集。注意，这里说的是功能上。瀑布模型的缺点就在于不够直观，快速原型法就解决了这个问题。一般来说，根据客户的需要在很短的时间内解决用户最迫切需要，完成一个可以演示的产品。这个产品只是实现部分的功能（最重要的）。它最重要的目的是为了确定用户的真正需求。在我的经验中，这种方法非常的有效，原先对计算机没有丝毫概念的用户在你的原型面前往往口若悬河，有些观点让你都觉得非常的吃惊。在得到用户的需求之后，原型将被抛弃。因为原型开发的速度很快，设计方面是几乎没有考虑的，如果保留原型的话，在随后的开发中会为此付出极大的代价。至于保留原型方面，也是有一种叫做增量模型是这么做的，但这种模型并不为大家所接受，不在我们的讨论之内。 上述的模型中都有自己独特的思想，其实现在的软件组织中很少说标准的采用那一种模型的。模型和实用还是有很大的区别的。\n软件生命周期模型的发展实际上是体现了软件工程理论的发展。在最早的时候，软件的生命周期处于无序","n_tokens":"1200","document_ids":"['10452f8edcb20cd5d2c545363b87a9c9']","entity_ids":"['80024f39b3254421ae1fb3a05c206b1f' '5ee09ffc7045401785e3e8934d7bcb3c'\n '9355b4d81dec4ef3a3c08ac753414587' '48870033ef9e470ca2fc39e96a03d9a7'\n '8f4cfbe4a87b444a97ab4a93e1d8f33b' 'f310b5f1768546c0b4a93cf3cbbbdcd4'\n '6b8201f979d04b3e805ae1bf5cf8acf9' '3f7f3cea655c46de97956bc35381cc6a'\n '504de0b45c6b4bf6a17c285c05702b22' '37971d2f23f64d45a3200be9cb9b612a'\n 'ab5e81fd9c724288aae8319a61fb0820' '7ba585b7dcec4773bf1b197fec45d479']","relationship_ids":"['47ef3107b93f4d18ba74438ca354520c' '974f5f1ef66c448bb64fff16a9fa8743'\n '8842367e79ed43a597ff7aaa3adb56f9' '4beda842a9674ea9b0bc0ab08d84a3c2'\n 'c2c548ef66624897a493352d02d70012' 'b22ec79bcb5f4e3fb7400dc6a2051b4d'\n 'b8766612c505407bb76ec936168c99fd' '83ef4210b8714a48a16197496def34b9'\n 'e78b54fa0be346bd87dd3c3c964d3dcc' 'a77c0c05243c4e3393107bedf0c0cc71'\n 'a76ce26ecf654311a52298cd27448cdf' '1ba9068aea264e179de9e29316ef36db']"},{"id":"56f7eddd572461d6bc0b453106e6c9f6","human_readable_id":"4","text":"独特的思想，其实现在的软件组织中很少说标准的采用那一种模型的。模型和实用还是有很大的区别的。\n软件生命周期模型的发展实际上是体现了软件工程理论的发展。在最早的时候，软件的生命周期处于无序、混乱的情况。一些人为了能够控制软件的开发过程，就把软件开发严格的区分为多个不同的阶段，并在阶段间加上严格的审查。这就是瀑布模型产生的起因。瀑布模型体现了人们对软件过程的一个希望：严格控制、确保质量。可惜的是，现实往往是残酷的。瀑布模型根本达不到这个过高的要求，因为软件的过程往往难于预测。反而导致了其它的负面影响，例如大量的文档、繁琐的审批。因此人们就开始尝试着用其它的方法来改进或替代瀑布方法。例如把过程细分来增加过程的可预测性。\n\n### 螺旋模型\n1988年，Barry Boehm正式发表了软件系统开发的\"螺旋模型\"，它将瀑布模型和快速原型模型结合起来，强调了其他模型所忽视的风险分析，特别适合于大型复杂的系统。\n螺旋模型沿着螺线进行若干次迭代，四个象限代表了以下活动：\n（1） 制定计划：确定软件目标，选定实施方案，弄清项目开发的限制条件；\n（2） 风险分析：分析评估所选方案，考虑如何识别和消除风险；\n（3） 实施工程：实施软件开发和验证；\n（4）客户评估：评价开发工作，提出修正建议，制定下一步计划。\n螺旋模型由风险驱动，强调可选方案和约束条件从而支持软件的重用，有助于将软件质量作为特殊目标融入产品开发之中。但是，螺旋模型也有一定的限制条件，具体如下：\n（1） 螺旋模型强调风险分析，但要求许多客户接受和相信这种分析，并做出相关反应是不容易的，因此，这种模型往往适应于内部的大规模软件开发。\n（2） 如果执行风险分析将大大影响项目的利润，那么进行风险分析毫无意义，因此，螺旋模型只适合于大规模软件项目。\n（3） 软件开发人员应该擅长寻找可能的风险，准确地分析风险，否则将会带来更大的风险\n一个阶段首先是确定该阶段的目标，完成这些目标的选择方案及其约束条件，然后从风险角度分析方案的开发策略，努力排除各种潜在的风险，有时需要通过建造原型来完成。如果某些风险不能排除，该方案立即终止，否则启动下一个开发步骤。最后，评价该阶段的结果，并设计下一个阶段。","n_tokens":"1025","document_ids":"['10452f8edcb20cd5d2c545363b87a9c9']","entity_ids":"['9832e5d8139f440a9ce28e7c7e1f6fc6' '5ee09ffc7045401785e3e8934d7bcb3c'\n '9355b4d81dec4ef3a3c08ac753414587' '45d715c4222044a59160bfe0ef9a7973'\n 'b6245e2aeba54748b0d87592142ac39d' '158f9aa0ac7a4ce6903edee1d4601495'\n '455856d6e2374075bd0ecf5043f0247f']","relationship_ids":"['add6ad51c7d84f33be09616b59169c49' '0c604897265f4a7d817251786c25d12e'\n '18c1999be4dd417d8a428f751165ed7e' 'a07a5cc8ce5340ecbeef9b8b62987fb0'\n 'ce2edea468e549a097fd0a4cc648cc95' 'a2e10f1e8cfb43058220a81d7a102b11'\n 'f8fae87466e04136bbf3ce76e3cd16d6' '89e250fac95c465a83a2c44697ef09bd']"},{"id":"d0c6c516190d34f448de462362502459","human_readable_id":"5","text":"在计算机科学中，数据结构是一种数据组织、管理和存储的格式。它是相互之间存在一种或多种特定关系的数据元素的集合。通常情况下，精心选择的数据结构可以带来更高的运行或者存储效率。数据结构往往同高效的检索算法和索引技术相关。\n数据结构研究的是数据的逻辑结构和数据的物理结构以及它们之间的相互关系。它包含三个方面的内容：即数据的逻辑结构、数据的存储结构和数据的操作，只有这三个方面的内容完全相同，才能成为完全相同的数据结构。\n\n## 研究对象\n\n### 数据逻辑结构\n数据的逻辑结构是指数据元素之间存在的逻辑关系，由数据元素的集合和定义在此集合上的关系组成。数据的逻辑结构与数据的存储无关，独立于计算机，是从具体问题抽象出来的数学模型。数据的逻辑结构由两个要素构成，分别是：数据元素的集合和关系的集合。一般来说，逻辑结构包括：\n1.集合：数据结构中的元素之间除了“同属一个集合” 的相互关系外，别无其他关系；\n2.线性结构：数据结构中的元素存在一对一的相互关系；\n3.树形结构：数据结构中的元素存在一对多的相互关系；\n4.图形结构：数据结构中的元素存在多对多的相互关系。\n数据的逻辑结构分类数据的逻辑结构分类\n\n### 数据的存储结构\n数据的逻辑结构在计算机中的存储表示或实现叫做数据的存储结构，也叫物理结构。数据的存储结构依赖于计算机。\n一般来说，一种数据结构的逻辑结构根据需要可以表示成多种存储结构，常用的存储结构有顺序存储、链式存储、索引存储和哈希存储等。\n数据的顺序存储结构的特点是：借助元素在存储器中的相对位置来表示数据元素之间的逻辑关系；非顺序存储的特点是：借助指示元素存储地址的指针表示数据元素之间的逻辑关系。\n\n## 分类\n数据结构有很多种，一般来说，按照数据的逻辑结构对其进行简单的分类，包括线性结构和非线性结构两类。\n\n### 线性结构\n简单地说，线性结构就是表中各个结点具有线性关系。如果从数据结构的语言来描述，线性结构应该包括如下几点：\n1.线性结构是非空集\n2.线性结构有且仅有一个开始结点和终端结点。\n3.线性结构所有结点都最多只有一个直接前驱节点和一个直接后继节点。\n线性表就是典型的线性结构，还有栈、队列和串等都属于线性结构。\n\n### 非线性结构\n简单地说，非线性结构就是表中各个结点之间具有多个对应关系。如果从数据结构的语言来描述，非线性结构应该包括如下几点：\n1.非线性结构是非空集。\n2.非线性结构的一个结点可能有多个直接前驱结点和多个直接后继结点。\n在实际应用中，数组、广义表、树结构和图结构等数据结构都属于非线性结构。\n\n## 常见数据结构\n在计算机科学的发展过程中，数据结构也随之发展。程序设计中常用的数据结构包括如下几个。\n\n### 数组(Array)\n数组是一种聚合数据类型，它是将具有相同类型的若干变量有序地组织在一起的集合。数组是最基本的数据结构，在各种编程语言中都有对应。一个数组可以分解为多个数组元素，按照数据元素的类型，数组可以分为","n_tokens":"1200","document_ids":"['1d887cc0f6b3ad07c4be9ca39b77ec90']","entity_ids":"['90b9e92489e3447e98bcff001b28dfa5' 'c1d79312944e4a23aed837920ed5962f'\n 'f81563c2fcd7421baeb3a44364f317b0' '4e49f54781544837b72ac4930b79a228'\n '02726d3049854c23ad72b1921630a732' '53e7a595284645e0a0b92b3948f4e14a'\n '75ae65bc0aef4a4a994d42cb5d8b1820' '4406c9dbd28b4b92b0c2927540b02e36'\n '977a9c5508ec496fadb4a62402e83fc3' '331d48e5335d4ff4862b59d8af75453e'\n '6b4f7949199144c19d9a75b5be8c2e31' '792c09ed9bc34d42835f83cf82382c79'\n '9507c1ce8f6f406885eed49c6c062dd2' '6a7f7b17fb9d4c14a30efc3b1cf48fd1'\n 'd5bb03efa0a84b6e9e618c064d8d23a9' '641973f484e04f739310eaa6a926fe49'\n 'deceb3ac552642f0a4f1b64abf22fb51' 'd4c87f6bcbf441469bc6306331812ca5'\n '93f8e6077f434e438d2100932e1cc026']","relationship_ids":"['5347ed3313224c6bb745114ac814a70b' '7afb65b3587748c6ae0108807d81985f'\n '6ec4feba36764536addb25b6fb66f703' '3df7931f11c94a9dafebdb2b6e713f0b'\n 'bfb3ce7d4ddc4c8d9c1c1af092c85348' '2a25fc55644646d694b2a8aa11bad8b3'\n '167a3163dd224d42ac7ac2265f35a582' 'fb156c94d6014292bca56ad994899bc9'\n '95f25c7212e54444acf2d4c6ba262897' 'bfebf68a69a34f37aa7ab88d87eee1eb'\n 'bd2dfc2f5dcc411c912dc618407117e7' '0bc438ca62884f2d9a493f1d9e7426c0'\n '52b0a2beda8246afa8ddf72a6886907e' 'cfafab3fb65144bfb9b39d79c85d2345'\n '925d1ff6003c45e7be9b001334b0bc7d' 'd471973422fa4503a935c99b69385c0f'\n 'e9abe10141464d0cadb895f38c4cf1b7' '982ac0b65386494c974ed613761de4a2'\n '18813fdf6d644e34850ce519d164f479']"},{"id":"20fc0d002e1399f47702b7b55463c10b","human_readable_id":"6","text":"括如下几个。\n\n### 数组(Array)\n数组是一种聚合数据类型，它是将具有相同类型的若干变量有序地组织在一起的集合。数组是最基本的数据结构，在各种编程语言中都有对应。一个数组可以分解为多个数组元素，按照数据元素的类型，数组可以分为整型数组、字符型数组、浮点型数组、指针数组和结构数组等。数组还可以有一维、二维以及多维等表现形式。\n\n### 堆栈(Stack)\n堆栈是一种特殊的线性表，又称为栈。它只能在表的固定端进行数据结点的插入和删除操作。栈按照先进后出、后进先出的原则来存储数据，也就是说，先插入的数据将被压入栈底，最后插入的数据在栈顶，读出数据时，从栈顶开始逐个读出。栈在汇编语言程序中，经常用于重要数据的现场保护。栈中没有数据时，称为空栈。\n\n### 队列(Queue)\n队列和栈类似，也是一种特殊的线性表。和栈不同的是，队列按照先进先出的原则来存储数据。队列只允许在表的一端进行插入操作，而在另一端进行删除操作。一般来说，进行插入操作的一端称为队尾，进行删除操作的一端称为队头。队列中没有元素时，称为空队列。\n\n### 链表(Linked List)\n链表是一种数据元素按照链式存储结构进行存储的数据结构，这种存储结构具有在物理上非连续的特点。链表由一系列数据结点构成，每个数据结点包括数据域和指针域两部分。其中，指针域保存了数据结构中下一个元素存放的地址。链表结构中数据元素的逻辑顺序通过链表中的指针链接次序实现。\n\n### 树(Tree)\n树是典型的非线性结构，它是由n（n>0）个有限结点组成的一个具有层次关系的集合。在树结构中，有且仅有一个根结点，该结点没有前驱结点。在树结构中的其他结点都有且仅有一个前驱结点。\n\n### 图(Graph)\n图是另一种非线性数据结构。图的数据结构包含一个有限的集合作为结点集合，以及一个无序对（对应无向图）或有序对（对应有向图）的集合作为边的集合。如果两个结点之间存在一条边，那么就表示这两个结点具有相邻关系。\n\n### 堆(Heap)\n堆是一种特殊的树形数据结构，一般讨论的堆都是二叉堆。堆的特点是根结点的值是所有结点中最小的或者最大的，并且根结点的两个子树也是一个堆结构。\n\n### 散列表(Hash)\n散列表源自于散列函数(Hash function)，其思想是如果在结构中存在关键字和T相等的记录，那么必定在F(T)的存储位置可以找到该记录，这样就可以不用进行比较操作而直接取得所查记录。\n\n## 常用算法\n数据操作是指对数据结构中的数据元素进行运算或处理。数据操作定义在数据的逻辑结构上，每种逻辑结构都需要一组对其数据元素进行处理以实现特定功能的操作，如插入、删除、更新等。数据操作的实现依赖于数据的存储结构。一般有以下几种常用运算：\n（1） 创建操作\n（2） 插入操作\n（3） 删除操作\n（4） 查找操作\n（5） 修改操作\n（6） 遍历操作","n_tokens":"1100","document_ids":"['1d887cc0f6b3ad07c4be9ca39b77ec90']","entity_ids":"['90b9e92489e3447e98bcff001b28dfa5' '53e7a595284645e0a0b92b3948f4e14a'\n 'd5bb03efa0a84b6e9e618c064d8d23a9' '80f796ef673c42c58035c1c34cbe8622'\n '73580c112a0a4d7b942a998ae8bd4f94' '4b1ae4cac56f40c9b0946fcf70b84659'\n '5e06222449f84dbabfded93b05f80d3a' '67bbce8d7d9f4c5c9df1ca1aa8afc462'\n 'b7000a51fc504220935226dab2c74f95' '02b190682d9a48c9ba8ec16033aee84a'\n '3f8c1c2823a44a9babc7c6af724fcb0a' '750a0de6ecc9483ea017c302f894e960'\n '9c2f6c7482084d57b3942123f71097a7' '67ce9447e9ab4b58ac4280d6b43912b7'\n '2cd9254c8dc84d51a7cf6ae4e091e96a']","relationship_ids":"['bfb3ce7d4ddc4c8d9c1c1af092c85348' 'dda19b04c4534eaf827662c9a954ea16'\n '59ed9d65ebc5492ab2d1d069c73ef89c' 'ff295adb659549e58f23832afaab1328'\n '38b313e9770d4714b9bc600b2227dbd3' 'c0d879f3c9104491af08cd77ec9e7b25'\n '87b6de9ace5c4e669aaeeb6a0a58b04e' 'bc86959a2a734453aa562e2370d94c81'\n 'c4fca73ebc2d4620a6aa512b1e2b3dd2' '1a54761cf02041d79095953c5452266d'\n '79fd9a9fafad4dc78106c18b467441ec' 'c47370673f15421fbc0b5b8b378bc077'\n 'aae69ef25a634a37bb2d5eaae18da9fc' '191a5d8ea7364ee29bd3a1947d4342df']"},{"id":"b24d264d6b72780b324c961484de8ecd","human_readable_id":"7","text":"计算机科学，研究计算机及其周围各种现象和规律的科学，亦即研究计算机系统结构、程序系统（即软件）、人工智能以及计算本身的性质和问题的学科。计算机科学是一门包含各种各样与计算和信息处理相关主题的系统学科，从抽象的算法分析、形式化语法等等，到更具体的主题如编程语言、程序设计、软件和硬件等。计算机科学分为理论计算机科学和实验计算机科学两个部分。后者常称为“计算机科学”而不冠以“实验”二字。前者有其他名称，如计算理论、计算机理论、计算机科学基础、计算机科学数学基础等。数学文献中一般指理论计算机科学。\n\n## 发展背景\n计算机科学在20世纪60年代初作为一门独立的学科出现，尽管作为其研究对象的电子数字计算机是在大约20年前发明的。计算机科学的根源主要在于数学、电气工程、物理学和管理信息系统的相关领域。\n计算机科学是系统性研究信息与计算的理论基础以及它们在计算机系统中如何实现与应用的实用技术的学科。它通常被形容为对那些创造、描述以及转换信息的算法处理的系统研究。计算机科学包含很多分支领域；有些强调特定结果的计算，比如计算机图形学；而有些是探讨计算问题的性质，比如计算复杂性理论；还有一些领域专注于怎样实现计算，比如编程语言理论是研究描述计算的方法，而程序设计是应用特定的编程语言解决特定的计算问题，人机交互则是专注于怎样使计算机和计算变得有用、好用，以及随时随地为人所用。\n有时公众会误以为计算机科学就是解决计算机问题的事业（比如信息技术），或者只是与使用计算机的经验有关，如玩游戏、上网或者文字处理。其实计算机科学所关注的，不仅仅是去理解实现类似游戏、浏览器这些软件的程序的性质，更要通过现有的知识创造新的程序或者改进已有的程序。\n\n## 研究领域\n计算机是一种进行算术和逻辑运算的机器，而且对于由若干台计算机联成的系统而言还有通信问题,并且处理的对象都是信息,因而也可以说，计算机科学是研究信息处理的科学。计算机科学分为理论计算机科学和实验计算机科学两个部分。在数学文献中所说的计算机科学，一般是指理论计算机科学。实验计算机科学还包括有关开辟计算机新的应用领域的研究。\n计算机科学的大部分研究是基于“冯·诺依曼计算机”和“图灵机”的，它们是绝大多数实际机器的计算模型。作为此模型的开山鼻祖，邱奇-图灵论题（Church-Turing Thesis）表明，尽管在计算的时间，空间效率上可能有所差异，现有的各种计算设备在计算的能力上是等同的。尽管这个理论通常被认为是计算机科学的基础，可是科学家也研究其它种类的机器，如在实际层面上的并行计算机和在理论层面上概率计算机、oracle 计算机和量子计算机。在这个意义上来讲，计算机只是一种计算的工具：著名的计算机科学家 Dijkstra 有一句名言“计算机科学之关注于","n_tokens":"1200","document_ids":"['65893facb6f398b52952ed4e060eda67']","entity_ids":"['90b9e92489e3447e98bcff001b28dfa5' '356d476c9db84f288e4bc7ba035135fa'\n 'fc2bb38d0b45469d8c7bc158b644b1e1' '09785ce07c424f72b1f89555863233a5'\n 'ad333ec0d44e45bda0c9c726d73ebd1e' 'a8e50d8f697c4c2fac0f2cf3379a15ff'\n 'f1daed92956b42708c4d78e606861a0e' '1e3fc3e715654a18bfc56267a07be386'\n 'a51def1a0ce241d695077e6949d821ef' '94511fc3ae0d471290fd552f9faa5fee'\n 'ece98d02169048148cafd43f6850ab8f' 'e3b3d85ba4614bae8b2fdf1595a4046e'\n '17a28b1629aa4a8b8e5a9cab9647c25c' '0c5f4f5e25cd42e6ad0d07d1ea808de5'\n '2eae6745708541f4ac855bde2f468527' '3f305a42e0234308a0e94927659d7bf7'\n 'f22dcc2fbb0a4f99b5150e5b3c0dbdb6' 'fe04255af10b4ae79e40c3df61e80902'\n 'cd8509e28533490ea899cacc50acc484' '9b8c115414294394a72b74f81fa007fe'\n '0a27e55a05424a55904b2be21a62e850']","relationship_ids":"['1afff680de5040a98bf51f33e0b84aea' '92740a053da54c7bbbc366d464e9c95d'\n 'd2c1562eeaa74ee6b4962cd055631521' '1d0bb5d3d77746eaba9267581762e419'\n 'd363074345ff408abe36da47ddaa2b01' 'd4f61bca8a0d4ad3b19402ada7582fe5'\n 'c41f84e817e942f9b0ddf2dab72fd437' '7a36a6bd9a0c45208763c70ae16c6367'\n '1974ffff6d0647749d62f6b8c8b212b4' '0f3bc566347f4b3d84852905b66addd9'\n '078231fa2a5c4626929aa7fa70d9904f' '132e723a5fb046218d7851b8647fd278'\n '640709022706432a97fc5d1769f7ca35' '4b1ca005794042b3b8d44d076fad01cc'\n '7aa5276553cf454b9eb9e84292d29d51' 'e9782950a1724e75b814632629d3187d'\n 'a49fbee4933f4706a7d31f9ea909f86e' 'f3a6ac085d3642efa0177ffeaf4b7adb'\n 'bfa8e64714b14f62b165e77c98134178' '66d1ba184cf24d7c88fd2a77bedef7d3']"},{"id":"56fb8847c4121fa38b321d5bef1eada9","human_readable_id":"8","text":"类的机器，如在实际层面上的并行计算机和在理论层面上概率计算机、oracle 计算机和量子计算机。在这个意义上来讲，计算机只是一种计算的工具：著名的计算机科学家 Dijkstra 有一句名言“计算机科学之关注于计算机并不甚于天文学之关注于望远镜。”。\n作为一个学科，计算机科学涵盖了从算法的理论研究和计算的极限，到如何通过硬件和软件实现计算系统。CSAB（以前被叫做Computing Sciences Accreditation Board），由Association for Computing Machinery（ACM）和IEEE Computer Society（IEEE-CS）的代表组成，确立了计算机科学学科的4个主要领域：计算理论，算法与数据结构，编程方法与编程语言，以及计算机元素与架构。CSAB还确立了其它一些重要领域，如软件工程，人工智能，计算机网络与通信，数据库系统，并行计算，分布式计算，人机交互，机器翻译，计算机图形学，操作系统，以及数值和符号计算。\n\n### 理论计算机\n主条目：理论计算机科学\n广义的理论计算机科学包括经典的计算理论和其它专注于更抽象、逻辑与数学方面的计算。\n\n### 计算理论\n主条目：计算理论\n按照Peter J. Denning的说法，计算机科学的最根本问题是“什么能够被有效地自动化？”计算理论的研究就是专注于回答这个根本问题，关于什么能够被计算，去实施这些计算又需要用到多少资源。为了试图回答第一个问题，递归论检验在多种理论计算模型中哪个计算问题是可解的。而计算复杂性理论则被用于回答第二个问题，研究解决一个不同目的的计算问题的时间与空间消耗。\n著名的“P=NP?”问题，千禧年大奖难题之一，是计算理论的一个开放问题。\n\n### 信息编码论\n主条目：信息论和编码理论\n信息论与信息量化相关，由Claude E. Shannon创建，用于寻找信号处理操作的根本极限，比如压缩数据和可靠的数据存储与通讯。编码理论是对编码以及它们适用的特定应用性质的研究。编码（code）被用于数据压缩，密码学，前向纠错，也被用于网络编码。研究编码的目的在于设计更高效、可靠的数据传输方法。\n\n### 算法\n算法指定义良好的计算过程，它取一个或一组值作为输入，经过一系列定义好的计算过程，得到一个或一组输出。算法是计算机科学研究的一个重要领域，也是许多其他计算机科学技术的基础。算法主要包括数据结构、计算几何、图论等。除此之外，算法还包括许多杂项，如模式匹配、部分数论等。\n\n### 程序设计理论\n主条目：程序设计语言理论\n程序设计语言理论是计算机科学的一个分支，主要处理程序设计语言的设计、实现、分析、描述和分类，以及它们的个体特性。它属于计算机科学学科，既受影响于也影响着数学、软件工程和语言学。它是公认的计算机科学分支，同时也是活跃的研究领域，研究成果被发表在众多学术期刊，计算机科学以及工程出版物。\n\n### 形式化方法\n主条目：形式化方法\n形式化方法是一种特别的基于数学的技术，用于软件和硬件系统的形式规范、开发以及形式验证。在软件和硬件","n_tokens":"1200","document_ids":"['65893facb6f398b52952ed4e060eda67']","entity_ids":"['9832e5d8139f440a9ce28e7c7e1f6fc6' '356d476c9db84f288e4bc7ba035135fa'\n 'ad333ec0d44e45bda0c9c726d73ebd1e' 'a8e50d8f697c4c2fac0f2cf3379a15ff'\n 'f1daed92956b42708c4d78e606861a0e' '1e3fc3e715654a18bfc56267a07be386'\n 'ece98d02169048148cafd43f6850ab8f' '2eae6745708541f4ac855bde2f468527'\n '3f305a42e0234308a0e94927659d7bf7' 'f22dcc2fbb0a4f99b5150e5b3c0dbdb6'\n '9b8c115414294394a72b74f81fa007fe' 'c14a574af3314b4c8e80ab471f49efcc'\n 'f2575b1c5c2549b1980828f4e501058b' '5798749dba3c443d8cc0a6291a69403d'\n '011b48d2176d477b98d0b4445255734a' 'b3f3e802de404a1aa4d6c8a13e288371'\n '0e5ae4e7156b43a5b2fcf455253bfc2c' '3063249ceb534d6281ff1bf2d679169b'\n '83f25f59393d4aefa132fc6f39a07c7b' '07a56a07bc4e4533886b59bb0e6af04e'\n '54d488bd349742d4b703cfe33c1308a4' 'fdc458aa70a9448782fc8f64fc009cd6'\n '07107c916e044b78a3aebf7b0ef11982' '41f580daddb349c989d784323c79054e'\n 'fac097914f9a4c3ca49b167cde056a69' '9890cd8ca91d4b759cf68dbf7447f5b9'\n '57a1b2926df247b5a5cf626901ade6a4' '6a3071075ae54165806431882ca4ace0'\n '2ca167bceaf14d1796bf08f46db8c974' '9affe93f1dec4083bc3a54cac0ad198a']","relationship_ids":"['ae66ddb641fc4c28b566fdc4ceed1bc2' '1d0bb5d3d77746eaba9267581762e419'\n 'd363074345ff408abe36da47ddaa2b01' 'd4f61bca8a0d4ad3b19402ada7582fe5'\n '0f3bc566347f4b3d84852905b66addd9' '4b1ca005794042b3b8d44d076fad01cc'\n '7aa5276553cf454b9eb9e84292d29d51' 'e9782950a1724e75b814632629d3187d'\n 'bfa8e64714b14f62b165e77c98134178' '9c9f49ae9e684e4bb700c445a11ea5c9'\n '6051e26d337e4ea3bab780d1423bb21f' '54c9f4e03c094cb3abfa3fe4b976e86e'\n '7328353b3e1946b3863289b7f745be82' '2ea5e4e4be56486cbedf02086b93266b'\n '4d1409f1632a4d0390300fe231c1f6f3' 'b3dd6ec6c4964a9998300bed78bbc0ea'\n 'e6f735ba9d3d440ab286d8cfec0fb737' 'ebc0c8bfa1984749bacf5ae9113607ef'\n '2ac5f43469cf437bad5522140fe6e75e' 'c18587d4d70746788d441c3f1cef848b'\n '32f4629b64b74864a3bf1b985b64249d' '9757f9f8a71042f3a73f213b3b68d738'\n '530c5df8715840078c498c8db88c9fb7' 'c28d29cf772a4f9ab000cdea32f72e4f'\n '1ce7c4245b89442bb74e4b9bd508a14f' '8620a3b528ac478db7f229ac56b8d6bd'\n '2c6e3b48ab594fa1a9c947dc840acd0e' 'c33ef4552dc945659db6e45928193aac'\n '44bc5a1cc1804a99b22359eb8b61e115']"},{"id":"4567004d9a5a4bca44dca3dc877b59cd","human_readable_id":"9","text":"��究成果被发表在众多学术期刊，计算机科学以及工程出版物。\n\n### 形式化方法\n主条目：形式化方法\n形式化方法是一种特别的基于数学的技术，用于软件和硬件系统的形式规范、开发以及形式验证。在软件和硬件设计方面，形式化方法的使用动机，如同其它工程学科，是通过适当的数学分析便有助于设计的可靠性和健壮性的期望。但是，使用形式化方法会带来很高的成本，意味着它们通常只用于高可靠性系统，这种系统中安全或保安（security）是最重要的。对于形式化方法的最佳形容是各种理论计算机科学基础种类的应用，特别是计算机逻辑演算，形式语言，自动机理论和形式语义学，此外还有类型系统、代数数据类型，以及软件和硬件规范和验证中的一些问题。\n\n### 并行计算分布式系统\n主条目：并行性和分布式计算\n并行性（concurrency）是系统的一种性质，这类系统可以同时执行多个可能互相交互的计算。一些数学模型，如Petri网、进程演算和PRAM模型，被创建以用于通用并发计算。分布式系统将并行性的思想扩展到了多台由网络连接的计算机。同一分布式系统中的计算机拥有自己的私有内存，它们之间经常交换信息以达到一个共同的目的。\n\n### 数据库和信息检索\n主条目：数据库和数据库管理系统\n数据库是为了更容易地组织、存储和检索大量数据。数据库由数据库管理系统管理，通过数据库模型和查询语言来存储、创建、维护和搜索数据。\n\n### 应用计算机科学\n尽管计算机科学（computer science）的名字里包含计算机这几个字，但实际上计算机科学相当数量的领域都不涉及计算机本身的研究。因此，一些新的名字被提议出来。某些重点大学的院系倾向于术语计算科学（computing science），以精确强调两者之间的不同。丹麦科学家Peter Naur建议使用术语\"datalogy\"，以反映这一事实，即科学学科是围绕着数据和数据处理，而不一定要涉及计算机。第一个使用这个术语的科学机构是哥本哈根大学Datalogy学院，该学院成立于1969年，Peter Naur便是第一任教授。这个术语主要被用于北欧国家。同时，在计算技术发展初期，《ACM通讯》建议了一些针对计算领域从业人员的术语：turingineer，turologist，flow-charts-man，applied meta-mathematician及applied epistemologist。 三个月后在同样的期刊上，comptologist被提出，第二年又变成了hypologist。术语computics也曾经被提议过。在欧洲大陆，起源于信息（information）和数学或者自动（automatic）的名字比起源于计算机或者计算（computation）更常见，如informatique（法语），Informatik（德语），informatika（斯拉夫语族）。\n著名计算机科学家Edsger Dijkstra曾经指出：“计算机科学并不只是关于计算机，就像天文学并不只是关于望远镜一样。”（\"Computer science is no more about computers than astronomy is about telescopes.\"）设计、部署计算机和计算机系统通常被认为是非计算机科学学科的领域。例如，研究计算机硬件被看作是计算机工程的一部分，而对于商业计算机系统的研究和部署被称为信息技术或者信息系统。然而，现如今也越来越多地融合了各类计算机相关学科的思想。计算机科学�","n_tokens":"1200","document_ids":"['65893facb6f398b52952ed4e060eda67']","entity_ids":"['9832e5d8139f440a9ce28e7c7e1f6fc6' '356d476c9db84f288e4bc7ba035135fa'\n 'cd8509e28533490ea899cacc50acc484' '9affe93f1dec4083bc3a54cac0ad198a'\n '05527ee9bfcf4774ab150367d6a0da93' '2eb0fb37844e4f43ad1d671a03eb28de'\n '805d7a64af324ae6acb4774fffc6ba6c' '20cd1cc58f704a7789a803396fc196d1'\n 'f236418ea5cb483ead052f3485a2bda4' 'e22a586048b748149ef1271d6f656d9c'\n 'e7d9c996f5874ccf9ed2d80a46da9dc9' '93bba13679204f1ead052479ccbabdfe'\n '394c6412f0194ac4b6e0039e69a1bdf7' '3e8ed05a2e434aaab482c271468a3cf9'\n 'f1952b1a3fae4d048028992d07c81d6f' '42b7c6e49e954c1a80c7bbc8932a1ea2'\n 'd14a402cc9da47098763c9b6d346e437' '5082299d7f0943abb0e10c6e2324f21b'\n '02430f3bc10343f990c93919041de368' 'bad7b9de25d3492297620e8cc1514e91']","relationship_ids":"['6203d7d2e8c344d587a9628daa17aeaf' '422963b14d6c449283e57620e02aea05'\n '08364a5f4d9148be8a248739edfcccb7' 'b08c4375254147ea887b1a110aecc81d'\n '09de6d0301454c979f23b064e1318477' '32a8fcac194e46c0ad5ffb45f2b6d0c3'\n 'ea299e02561c4a8d82e8441c43df3a72' '0fb3530418084ef1a242c90e7850a887'\n '7e913062494741e6bbc12eee32030529' '49cf93298b124a59b4b1f18ca6ab4668'\n 'c9ed5cff62514195ab48a3db89f250cb' 'd2117f48936e498ca67b4febd365a1f9'\n 'ba0225318ad94a43a415501a426e101c' '5ce142346f8540148fad2dcbcfe2afe3'\n '671454d3932a4ef79a6848733da02246' 'f8ba85d0d7864eab9b4eb662be1a9d20'\n '077aa50dc6e04bd4be01c5ccf1ee419c']"},{"id":"7941e824c7d57c036fc6782cb267a414","human_readable_id":"10","text":"。例如，研究计算机硬件被看作是计算机工程的一部分，而对于商业计算机系统的研究和部署被称为信息技术或者信息系统。然而，现如今也越来越多地融合了各类计算机相关学科的思想。计算机科学研究也经常与其它学科交叉，比如心理学，认知科学，语言学，数学，物理学，统计学和经济学。\n计算机科学被认为比其它科学学科与数学的联系更加密切，一些观察者说计算就是一门数学科学。早期计算机科学受数学研究成果的影响很大，如Kurt G&ouml;del和Alan Turing，这两个领域在某些学科，例如数理逻辑、范畴论、域理论和代数，也不断有有益的思想交流。\n计算机科学和软件工程的关系是一个有争议的话题，随后关于什么是“软件工程”，计算机科学又该如何定义的争论使得情况更加混乱。David Parnas从其它工程和科学学科之间的关系得到启示，宣称计算机科学的主要重点总的来说是研究计算的性质，而软件工程的主要重点是具体的计算设计，以达到实用的目的，这样便构成了两个独立但又互补的学科。\n\n### 人工智能\n主条目：人工智能\n这个计算机科学分支旨在创造可以解决计算问题，以及像动物和人类一样思考与交流的人造系统。无论是在理论还是应用上，都要求研究者在多个学科领域具备细致的、综合的专长，比如应用数学，逻辑，符号学，电机工程学，精神哲学，神经生理学和社会智力，用于推动智能研究领域，或者被应用到其它需要计算理解与建模的学科领域，如金融或是物理科学。人工智能领域开始变得正式源于Alan Turing这位人工智能先驱提出了图灵试验，以回答这样一个终极问题：“计算机能够思考吗？”\n\n### 机器翻译\n主条目：机器翻译\n1947年，美国数学家、工程师沃伦·韦弗与英国物理学家、工程师安德鲁·布思提出了以计算机进行翻译（简称“机译”）的设想，机器翻译从此步入历史舞台，并走过了一条曲折而漫长的发展道路。机译被列为21世纪世界十大科技难题。与此同时，机译技术也拥有巨大的应用需求。\n机译消除了不同文字和语言间的隔阂，堪称高科技造福人类之举。但机译的译文质量长期以来一直是个问题，离理想目标仍相差甚远。中国数学家、语言学家周海中教授认为，在人类尚未明了大脑是如何进行语言的模糊识别和逻辑判断的情况下，机译要想达到“信、达、雅”的程度是不可能的。这一观点恐怕道出了制约译文质量的瓶颈所在。\n\n### 计算机体系结构与工程\n主条目：计算机体系结构和计算机工程\n计算机系统结构，或者数字计算机组织，是一个计算机系统的概念设计和根本运作结构。它主要侧重于CPU的内部执行和内存访问地址。这个领域经常涉及计算机工程和电子工程学科，选择和互连硬件组","n_tokens":"1200","document_ids":"['65893facb6f398b52952ed4e060eda67']","entity_ids":"['9832e5d8139f440a9ce28e7c7e1f6fc6' '356d476c9db84f288e4bc7ba035135fa'\n 'ad333ec0d44e45bda0c9c726d73ebd1e' 'fdc458aa70a9448782fc8f64fc009cd6'\n '7c631d0f416d4c8b84aec186cf02afa1' '256b708a0fad40e087479b5d2cc6a161'\n '62f25a03e8a845d88d6be987972f4a15' '687151800e2a4c838919cfb5e92dfcdc'\n '92e73da2c0454726b681e23f32519232' '177d19d8cdc9493fa11b5e69fa48e482'\n '518b300ce5a441ddaa0733ae56636cde' '57a4016190594a92af29b08ff4345acf'\n '7b30d73c7cc34ba39c4aa793c02de518' '5328fa5efac5433b9c8ec349c0743020'\n '023df72c417740edab365dee28e63e65']","relationship_ids":"['ae66ddb641fc4c28b566fdc4ceed1bc2' '1d0bb5d3d77746eaba9267581762e419'\n 'c18587d4d70746788d441c3f1cef848b' 'c911db5fc19443a0a8798362b8485c81'\n 'fbf5442131504e84ba0340deca6a10ee' '1351be1bc66249579cffa08978657c97'\n '35701612a2d14edea9795df9221d31b4' '03a5f116d34d4e4dba04dd39b404a0d3'\n '13240b7f4c044af3a106ec45262e8327' '3bd0bccd5e214a238d4e67e636e1bac5'\n '31820d582fc5466fbc90378225e4a77a' '96745b4c2830424fb65153e296875b62'\n '76a3663bf29240ef87decd778abe9969' '9aa065c8bea24dd69438529991d2da74']"},{"id":"400192d0c1b21de147d32cb32148367a","human_readable_id":"11","text":"构和计算机工程\n计算机系统结构，或者数字计算机组织，是一个计算机系统的概念设计和根本运作结构。它主要侧重于CPU的内部执行和内存访问地址。这个领域经常涉及计算机工程和电子工程学科，选择和互连硬件组件以创造满足功能、性能和成本目标的计算机。\n\n### 计算机图形与视觉\n主条目：计算机图形学\n计算机图形学是对于数字视觉内容的研究，涉及图像数据的合成和操作。它跟计算机科学的许多其它领域密切相关，包括计算机视觉、图像处理和计算几何，同时也被大量运用在特效和电子游戏。\n\n### 计算机安全和密码学\n主条目：计算机安全和密码学\n计算机安全是计算机技术的一个分支，其目标包括保护信息免受未经授权的访问、中断和修改，同时为系统的预期用户保持系统的可访问性和可用性。密码学是对于隐藏（加密）和破译（解密）信息的实践与研究。现代密码学主要跟计算机科学相关，很多加密和解密算法都是基于它们的计算复杂性。\n\n### 计算科学\n计算科学（或者科学计算）是关注构建数学模型和量化分析技术的研究领域，同时通过计算机分析和解决科学问题。在实际使用中，它通常是计算机模拟和计算等形式在各个科学学科问题中的应用。\n\n### 信息科学\n主条目：信息科学\n\n### 软件工程\n主条目：软件工程\n软件工程是对于设计、实现和修改软件的研究，以确保软件的高质量、适中的价格、可维护性，以及能够快速构建。它是一个系统的软件设计方法，涉及工程实践到软件的应用。\n\n## 研究课题\n①、计算机程序能做什么和不能做什么（可计算性）；\n②、如何使程序更高效的执行特定任务（算法和复杂性理论）；\n③、程序如何存取不同类型的数据（数据结构和数据库）；\n④、程序如何显得更具有智能（人工智能）；\n⑤、人类如何与程序沟通（人机互动和人机界面）。\n\n## 相关奖项\n计算机科学领域的最高荣誉是ACM设立的图灵奖，被誉为是计算机科学的诺贝尔奖。它的获得者都是本领域最为出色的科学家和先驱。华人中首获图灵奖的是姚期智先生.他于2000年以其对计算理论做出的诸多“根本性的、意义重大的”贡献而获得这一崇高荣誉。\n\n## 系统分类\n计算机系统可划分为软件系统与硬件系统两大类。\n\n### 硬件\n结构控制和指令系统\n算法和逻辑结构\n存储器结构\n冯·诺伊曼结构\n哈佛结构\n输入/输出和数据通信\n数字逻辑\n逻辑设计\n集成电路\n计算机系统组织\n计算机系统结构\n计算机网络\n分布式计算\n网络安全\n计算机系统实现\n\n### 软件\n系统软件\n操作系统\n编译器\n应用软件\n计算机游戏\n办公自动化\n网络软件\nCAD软件\n计算机程序\n程序设计和程序设计实践\n面向对象技术\n程序设计语言\n软件工程\n软件复用\n驱动程序\n计算机模拟\n程序设计方法学\n数据和信息系统\n数据结构\n数据存储表示\n数据加密\n数据压缩\n编码与信息论\n文件\n信息系统\n管理信息系统\n决策支持系统- 专家系统\n数据库\n信息存","n_tokens":"1200","document_ids":"['65893facb6f398b52952ed4e060eda67']","entity_ids":"['9832e5d8139f440a9ce28e7c7e1f6fc6' '90b9e92489e3447e98bcff001b28dfa5'\n 'fc2bb38d0b45469d8c7bc158b644b1e1' 'ad333ec0d44e45bda0c9c726d73ebd1e'\n 'f1daed92956b42708c4d78e606861a0e' 'fe04255af10b4ae79e40c3df61e80902'\n 'cd8509e28533490ea899cacc50acc484' '54d488bd349742d4b703cfe33c1308a4'\n '9f7a04942ae841d7aacc6fe1cc71258c' '75ba6446b609419d86a2eaba0ad26f98'\n '196e99c95dae4904aac02e09f8722cff' '7b38e8620e8545ebb081e1d427415a7f'\n '2c4ccc310d8c4832a302cfad81983caf' '160b9d47dbe3426ab3edaff337b259bd'\n 'b47622df190f46d58ae0bb0b82f5acd7' '209b69e5ca1a48d998d35fe9fef788a2'\n '214681eb6e7447569eef2d900d9497c2' 'f727615f342648b287a2a731d52b17dc'\n '181e403893ef40dc957b114a3b289701' '9350e44862ea4b719741e0956807cd4b'\n '999160dd89254c78b30ab83659445f16' '7ee95b4b340a497cbbb04aa5c88632fd'\n '97f309601cfd499eb298b8bcf0a157db' '100a30c846a24a4e8c191870cf30a9f8'\n '4da842b5f792433c8f490f75b9bb191c' 'e1d71e0d3fe143e98737e623beaeb1b1'\n '889e0e176d8a43a1add3d4dcf9749568' '1e87ddc6ec9a4a48b13d703f95058a9a'\n 'cf578bc8c67245eebcbcacf6742fb847' 'dae971ad814b4c55be010b59db085cca'\n '16b51017df1b4b30bb6a8715767ca7ad']","relationship_ids":"['95a778fbc46d4d03b21a63772809c0f5' 'e461d357d3b44585bee71ffdc54a7c24'\n 'd2c32742463e4955a21e829cf0a42840' 'e66f072e397f4e829756968924e11b49'\n 'bc0e0f6e418e46f1859084811fc1e481' '36e795a26cc549b1896d57202fc68da1'\n '3f448e6fa2d9457581fe89dfb347d29c' '77fba5830730429fb2b775fab2f45e68'\n '36a954e48b3f41c4a49d47ecffcee080' '83ad47a390764850815e9cdfcdd39360'\n 'e7a331c1c1cd46098af0204ae403c2ea' 'b8d4afeb80dd46b0ab01edad332400a3'\n '3aaa93d8222143ddb38f54c295ac5fb0' '8148030991504fcd93c4f513ec2b0a31'\n '78ad0f7678214d019e27f821cce9268b' '5e9d4c784cc34d9b843783ec1d42652a'\n 'ea239cc4a0474df0b3367c1777b404b3']"},{"id":"0c6a2f08f598aa5a056b2c33fdb75119","human_readable_id":"12","text":"实践\n面向对象技术\n程序设计语言\n软件工程\n软件复用\n驱动程序\n计算机模拟\n程序设计方法学\n数据和信息系统\n数据结构\n数据存储表示\n数据加密\n数据压缩\n编码与信息论\n文件\n信息系统\n管理信息系统\n决策支持系统- 专家系统\n数据库\n信息存储和数据存取\n信息交互与表达\n主要的研究领域\n形式化基础\n逻辑学\n谓词逻辑\n模态逻辑\n时序逻辑\n描述逻辑\n数学\n泛代数\n递归论\n模型论\n概率论和数理统计\n逻辑代数\n布尔代数\n离散数学\n组合数学\n图论\n网论\n信息论\n理论计算机科学\n形式语言\n自动机\n可计算性\n算法\n计算复杂性\n描述复杂性\n编译器\n程序设计理论\n信息论\n类型理论\n指称语义\n微程序\n遗传算法\n并行计算\n计算方法学\n人工智能\n机器翻译\n计算机图形学\n图像处理与计算机视觉\n模式识别\n语音识别\n文字识别\n签名识别\n人脸识别\n指纹识别\n仿真与建模\n数字信号处理\n文档与文本处理\n计算机应用\n数值计算\n数值分析\n定理机器证明\n计算机代数\n工程计算\n计算机化学\n计算机物理\n生物信息论\n计算生物学\n非数值计算\n工厂自动化\n办公室自动化\n人工智能\n信息存储与检索\n符号语言处理\n计算机辅助科学\n计算机辅助设计\n计算机辅助教学\n计算机辅助管理\n计算机辅助软件工程\n机器人学\n多媒体技术\n人机交互\n电子商务\n特定技术\n测试基准\n机器视觉\n数据压缩\n软件设计模式\n数字信号处理\n文件格式\n信息安全\n国际互联网络\n超大规模集成电路设计\n网络传输协议\n网络处理器技术\n整数运算器\n浮点运算器\n矩阵运算处理器\n网格\n计算科学史\n计算机历史\n软件业历史\n编程思想\n\n## 专业院校\n美国开设计算机科学专业的院校\n普渡大学西拉法叶分校，弗吉尼亚大学，密西根大学安娜堡分校，乔治城大学，维克森林大学，耶鲁大学，哥伦比亚大学，华盛顿大学，卡内基梅隆大学，佐治亚理工学院，加州理工学院，麻省理工学院，斯坦福大学，加州大学伯克利分校，伊利诺伊大学香槟分校，威斯康星大学麦迪逊分校，伦斯勒理工学院，哈佛大学，俄勒冈大学。\n\n## 相关学科\n计算机科学与另外的一些学科紧密相关。这些学科之间有明显的交叉领域，但也有明显的差异。\n信息科学 - 软件工程 - 信息系统 - 计算机工程 - 信息安全 -密码学- 数学 -工程学- 语言学 - 逻辑学\n\n## 发展历史\n计算机科学中的理论部分在第一台数字计算机出现以前就已存在。计算机科学根植于电子工程、数学和语言学，是科学、工程和艺术的结晶。它在20世纪最后的三十年间兴起成为一门独立的学科，并发展出自己的方法与术语。\n\n### 30年代\n英国数学家A.M.图灵和美国数学家E.L.波斯特几乎同时提出了理想计算机的概念（","n_tokens":"1200","document_ids":"['65893facb6f398b52952ed4e060eda67']","entity_ids":"['9832e5d8139f440a9ce28e7c7e1f6fc6' '90b9e92489e3447e98bcff001b28dfa5'\n '356d476c9db84f288e4bc7ba035135fa' 'ad333ec0d44e45bda0c9c726d73ebd1e'\n 'f1daed92956b42708c4d78e606861a0e' 'ece98d02169048148cafd43f6850ab8f'\n 'cd8509e28533490ea899cacc50acc484' '07a56a07bc4e4533886b59bb0e6af04e'\n 'fdc458aa70a9448782fc8f64fc009cd6' '41f580daddb349c989d784323c79054e'\n 'fac097914f9a4c3ca49b167cde056a69' '57a1b2926df247b5a5cf626901ade6a4'\n 'bad7b9de25d3492297620e8cc1514e91' '256b708a0fad40e087479b5d2cc6a161'\n '687151800e2a4c838919cfb5e92dfcdc' '75ba6446b609419d86a2eaba0ad26f98'\n '7b38e8620e8545ebb081e1d427415a7f' '2c4ccc310d8c4832a302cfad81983caf'\n '100a30c846a24a4e8c191870cf30a9f8' '4da842b5f792433c8f490f75b9bb191c'\n 'e1d71e0d3fe143e98737e623beaeb1b1' '889e0e176d8a43a1add3d4dcf9749568'\n '1e87ddc6ec9a4a48b13d703f95058a9a' 'cf578bc8c67245eebcbcacf6742fb847'\n '16b51017df1b4b30bb6a8715767ca7ad' 'e80f7dbcc3b74be9910e89627ee9720e'\n '1bc2f1b940d94c91b309f6de24aba83e' 'd23373a01ac042279c1719796d5b5c3a'\n 'fba53d88c96248dd967b8794af742c90' 'b9fe5a09bd534996bfe6c0b94be1a065'\n 'c5a3a184f6b9492ab0d7fe9b213485f3' '94c1793eb54e42deb1eeb856d6c3c2c0'\n '45146bdca7dd462796169d6e445b302b' '80cf79deff2844ca9d5c9f73529365a4'\n '4e1072580c074ec2b2e3aa9c25cac742' '5843e4f86f074429b66479051b47f69d'\n 'a18c1297d03943d98faa51b5d2f83d1c' 'd98a83cb41384b3cb310e5948647338f'\n '8ae181e3d8f04292842fb068b60c2a71' '94579f85ffe948e2be8c5c7d97bd4b39'\n 'abcdf319c2f74f00873b6aabaee252d3' '062dc07d0cd549ee9a12803d00a9434e'\n '23c8247dee0645b8a8d5595789bdf793' 'f6987f688bf74c068a5c5d1d3335bb55'\n '70c3e65a0fb04097ae32d5b3a8056251' '1aa8627e11f74d40b15dc4c71e95ba8e'\n 'aa77d5f300744a18a761a1f1938690bf' 'b67dece446f34b48902143102b73a3e1'\n '0c9668dad9e449e795d7d2597e026f4f' 'd29b75ac983d4b4d9a0f07a2be146ef5'\n '2212c2307a4545f4b7f017feca133cf5' '9ddb75153d264d19ad2d632e6c333322'\n '2cbfd98074cd40f285d111c711879024' '64986dcfda9d4c7a97f0bd8ec4fd6fd1'\n '25932640ea2f43498cdb955ecd108ef2' '153d7fe83be94767a0c5317fcd5fdd82'\n '730438f6951a41d0ba220f76b06b0387' 'e2266a5e8af04779a5ee8ba7ccbf13d0'\n 'b1ffbe20f05f4aa5be302ce5b2e6db01' 'dbdd941357e04cda89791ecf29183be3'\n 'cb853575a13e42a788b4de4edd5e65c5' '4477ecff1dd74babb909afe7bffd1611'\n '8dc54cb7682244d7a234d55f1ae6c45f' '3453b4be80aa4d628c2cb74d9e07b392'\n '2e2f2e771bad4d4d971b95e5d4d6a6d1' '7de0ac1c317b490391205e36ce152b98'\n 'b604bb4e035645e9acaff2cc1a4d7e4c' 'c3aadcb8e3f14da4bfbd331ca06d9c7c'\n 'b0d5034b58ea42419442ce7a36e7104b' '6dcf63883f6145e2af9e5f6aae9b1956'\n '0de9fb3d9b864cec9204ee1bd315a460' 'a86ae434d4da46c295c4bb521d3ba613'\n '9346408bcb99410daeaa23c4742c3987' 'f0ce0e3815a94a7188114cf575214f28'\n '319246ba5f9d43e9a220e6d7cd8d9320' 'f98dca797fdd452891f71a0714b14c8d'\n '6379dde794b54aac814ce6ee015a7540' '1dec2982f70c463cad8da43cc4c44ca2'\n '3dac52fe867a4fdc8b8b1bd817227e71' 'e779ad59e72849a2bfb842dcc14876a6'\n 'ae5e67b89b4e4e2dab088689c6cd5944' 'dbf24bb3d9ef4f2baf8280aa8ae5fd36'\n '3d54b963d43b48b788dcdd7a3bb337f1' '2aa68aa14d604783adb15460f467ad63'\n 'a3110252e1994972ba44ea12db94bfaa' '9ba6ee64de0143698645908ef0845be5'\n '1018f37d1c204f55907fa2ca7ae42391' '2b37321662054148b23735b008cb0b33'\n 'b8a962e6426a488f8cbc816d150e352d' '0a36755830cc4ed5ad495261f7afd263'\n 'aef35cab6f204cb6bb0181d99c395e00' '1d39f15cca3a48efb71ec29ca6c943dd'\n 'd3f46f673e2d40f1982fa9090e6e585a' '7a51f897f6c5458fab15db7d75f95acb'\n '3b828c7377c64fce8b56b45fcd09230e' 'caee7421d15e4983b60640f8577c1e36'\n 'e2ddd082ed584f9dacec6e52e5a84005' '1e851040e9a942728b3d532e1722a617'\n '78ea4303918a4fa084cae940090092fb' '1fe4582ad7f44a55b39eda29c35b7b69'\n '4bf693e93ddf4512a8789ba4f5a95321' '038919c36104407eaffe5a5c75d055c1'\n '56abd61be3a441a6918a4984b50546be' '46954733bd714acd9e395dbb486c75a5'\n '9be1f98505474307a422137652d9c167' '3f690eab1e2a4382a31e89baa3e0426b'\n '0d10d92f90f54b39b719904d0d76efb2' 'df549e0eea9a4409acb3916d8b37fcc0'\n 'bb88db30c5284fcd891aaa04e76c1259' 'c968693fae8041c78101bc69ee4a369d'\n 'ae3c0414903b46fcb9635f03cf248ceb' 'ca842dfbc75449d8a58af92b95df9dae'\n 'aa1e5ef6e29340c680d61f218e598222' 'ef6564fc4c0041fab6260243e5513251'\n 'd726f11784394aed8db8df72d0ba903e' 'd6dd8be6b4dd4e22baf1615e16e386a0'\n 'f93bceeddfe14ae3aa25e0a74a9713fe' 'eed8f29a2e0c43ef80c1392e921f5158'\n 'a4e5235fef62463192bb7e2b5c5d7a34' '6bbf8216b58f44379d3b7e8890d26e7e'\n '46f0bcc114e240e5882fba537fab7e3c' 'b8d7c70a1dc8490395efe82c20e5b482'\n '0b72fa9c0be143f8a5b38c6e1b185795' 'e7571c9a04834c05a670089c9a731dfa'\n '30cfc735dc8e4faba2140e86c4aff73b' 'f1ad07868c1845e19fc960e4b456e01b'\n '919a56640b8547ce9893e0075fa0f3ed' 'fb619c21475d46adb1e52050653d32d8'\n '158c4c628b9f4c859f9d72fd86451673' 'd7ca6e4b8a31459ca31ef5706e23e98b'\n 'dab38db2f1a44ceba153f8b3fba71cfa' 'c8cfe680c98c4a2388b10ba12fd821f8'\n 'e2ab9f7b23814077a174c1aa3c7e9a0b' '3e8909a8918645e8b2d4a3211fdb0ab3']","relationship_ids":"['8feb28024bc84870b60249fb5c1c6733' '252b890d487545109c2a093235703cea'\n 'aa26604848914daca220ffaf9f349fe4' 'f7f423a91b204da2b5aa06936f34fd2a'\n 'c87b6df289e64df5b84c2c597f9a9528' '77ca8c1c015d40e088eaf8b0be2cec40'\n 'f1c14836ff8d4a13a80c4bc942d4b085']"},{"id":"f7dcbbaa8289ae69a63138a1af15931d","human_readable_id":"13","text":"�的结晶。它在20世纪最后的三十年间兴起成为一门独立的学科，并发展出自己的方法与术语。\n\n### 30年代\n英国数学家A.M.图灵和美国数学家E.L.波斯特几乎同时提出了理想计算机的概念（图灵提出的那种理想机在后来的文献中称为图灵机）。\n\n### 40年代\n数字计算机产生后，计算技术（即计算机设计技术与程序设计技术）和有关计算机的理论研究开始得到发展。这方面构成了所说的理论计算机科学。至于图灵机理论，则可以看作是这一学科形成前的阶段。至于“计算机科学”一词则到60年代初才出现，此后各国始在大学中设置计算机科学系。学科内容 计算机科学是一门年轻的科学，它究竟包括哪些内容,还没有一致公认的看法。一般认为,计算机科学主要包括理论计算机科学、计算机系统结构、软件工程的一部分和人工智能。理论计算机科学 理论计算机科学是在20世纪30年代发展起来的。40年代机电的与电子的计算机出现后，关于现实计算机及其程序的数学模型性质的研究以及计算复杂性(早期称作计算难度)的研究迅速发展起来，形成自动机论、形式语言理论、程序设计理论、算法设计与分析和计算复杂性理论几个领域。计算机系统结构\n\n### 50年代\n50年代以来，计算机的性能在计算速度和编址空间方面已提高了几个数量级。但大部分是通过元件更新而获得的。在系统结构方面基本上仍是属于40年代后期形成的存储程序型，即所谓诺伊曼型机器。这种结构的主要特点是它属于控制流型。在这种结构中，一项计算先做什么后做什么是事先确定了的，程序中指令的顺序是事先确定了的。为了在计算机的性能方面取得大的进展，需要突破这种旧的形式。计算机系统结构方面的重要课题之一，是探索非诺伊曼型机器的设计思想。在非诺伊曼型机器中，有一种是70年代初提出的数据流机器（又名数据驱动机器）。美国、苏联和英国都已制成这种机器。这种机器的特点是，在一项计算中先做什么后做什么不是事先确定，所执行的指令是动态排序的。排序的原则是操作数已准备就绪的先做，因而称作数据驱动机器。这种类型的机器更便于实现并行计算。软件工程 程序设计在相当长的时间内是一种类似“手艺”而不是类似现代工程的技术。\n\n### 60年代\n60年代以来出现了大程序。这些大程序的可靠性很难保证。到60年代后期，西方国家出现了“软件危机”。这是指有些程序过于庞大（包含几十万条以至几百万条指令），成本过高而可靠性则比较差。于是提出了软件工程的概念，目的在于使软件开发遵守严格的规范，使用一套可靠的方法，从而保证质量。现代软件工程的方向是形式化和自动化，而形式化的目的在于自动化。这里所说的自动化就是将程序设计中可以由机器来完成的工作，尽量交给机器去做。中心课题之一是程序工具和环境的研究。程序工具是指辅助人编程序的程序，如编译","n_tokens":"1200","document_ids":"['65893facb6f398b52952ed4e060eda67']","entity_ids":"['9832e5d8139f440a9ce28e7c7e1f6fc6' '356d476c9db84f288e4bc7ba035135fa'\n 'fc2bb38d0b45469d8c7bc158b644b1e1' 'ad333ec0d44e45bda0c9c726d73ebd1e'\n '1e3fc3e715654a18bfc56267a07be386' '17a28b1629aa4a8b8e5a9cab9647c25c'\n '41f580daddb349c989d784323c79054e' '153d7fe83be94767a0c5317fcd5fdd82'\n 'e2ab9f7b23814077a174c1aa3c7e9a0b' '3e8909a8918645e8b2d4a3211fdb0ab3'\n '8f60270740ff493d92de035d9992301b' '35f3c1eafa754d499fa945476e8b58ab'\n '05c0c731691b437d92dddd832a7712f6' 'f52e91ace51d4011bdd3fb94463972d3'\n '742eb219d52c4ba19722a9b326998c39' '73f4eeea9967404690e80f2b88efe3e5']","relationship_ids":"['ae66ddb641fc4c28b566fdc4ceed1bc2' '20cf03dafc764cf59167b0953f8e8f9e'\n '92740a053da54c7bbbc366d464e9c95d' '1d0bb5d3d77746eaba9267581762e419'\n '9757f9f8a71042f3a73f213b3b68d738' 'be5cadabaaa647c2a2bea70f1ab0f29e'\n '2f03778426ef455fadc9439a89054cf9' 'c54b8f4d4ef04496a307108e538e9be6'\n '07803f681ab345d88b854265fa36f121' 'f8affa11d61f4d2aba30a2b1489e8cae'\n '206a53b52c244403861e7f404a23bc85' '94e96e66cc4245cf970845b86cd15c4f'\n 'd0b746f4b5c4484d8dc82850951ba3cf' '9c98c87289fd4afb907c347f176e07cc'\n '012b4b2a706a44c080cf3ca029b3b375']"},{"id":"29d56e763e5ff2801eb11b24660ff1f2","human_readable_id":"14","text":"方向是形式化和自动化，而形式化的目的在于自动化。这里所说的自动化就是将程序设计中可以由机器来完成的工作，尽量交给机器去做。中心课题之一是程序工具和环境的研究。程序工具是指辅助人编程序的程序，如编译程序、编辑程序、排错程序等；程序环境则是指一套结合起来使用的用来辅助人编程序的程序工具。人工智能 用计算机模拟人的智能，特别是模拟思维活动的技术及其有关理论。由于人的思维活动离不开语言,而且人对于某一类问题进行思索和探索解法时,总是需要以关于这一类问题的基本知识(专业知识或常识)作为出发点。于是，知识表示和机器对自然语言的理解就构成人工智能的两个重要领域。所谓知识表示，是指将原来用自然语言表示的知识转换成用符号语言表示的，从而可以储存在机器内供机器使用的知识。人工智能的研究角度有探索法的角度和算法的角度。通常所说的解题算法是指机械的和总是有结果的方法，而这里所说的算法却是广义的，包括那些机械的而在使用时不一定有结果的算法。这种方法时常称作半可判定的方法。\n人在解决问题时，时常采用探索法。这种方法具有“试错法”的性质，也就是说，试验若干条途径，一条路走不通时再试另一条，直到问题得到解决时为止。机器可以模拟人用探索法解题的思维活动。但由于可能途径的数目非常之大，不可能进行穷举式的探索。人一般是只选出一些最有希望得到结果的途径去进行探索。人的这种能力，就是进行创造性思维的能力。这是机器极难模拟的事情。采用算法角度，使用特定的解题算法或半可判定的方法时，会遇到另一方面的困难。那就是当问题的复杂程度较高时（比如说是指数的），即使问题是有结果的，机器也无法在实际可行的时间内得到结果。在计算机出现的初期，人们曾寄希望于机器的高速度，以为在模拟人的思维时，机器可能用它的高速度来换取它所不具有的创造性思维。但通过“组合性爆炸”问题（“组合性爆炸”是指一些组合数学中的问题，在参数增大时，计算时间的增长率时常是指数的，甚至高于指数），人们认识到，单纯靠速度不能绕过组合性爆炸所产生的障碍。有无办法来克服这种困难，尚有待于进一步研究。与其他学科的关系 计算机是由物理元件构成的,迄今主要是由电子元件构成的。因此，物理学的一些分支和电子工程便构成计算机科学的基础。同时，计算机科学在一定意义上是算法的科学，而算法是一个数学概念。因此，数学的某些分支如算法理论（即可算性理论，又名递归函数论）也构成计算机科学的基础。但计算机科学已发展成为一门独立的技术科学，既不是电子学的一个分支，也不是数学的一个分支。这是就这个学科的整体而言。至于理论计算机科学，由于它可以看作是计算机科学的数学基础，在一定意义上，可以看作是数学的一个分支。另一个与计算机科学有密切关系的学科是控制论","n_tokens":"1200","document_ids":"['65893facb6f398b52952ed4e060eda67']","entity_ids":"['32a7af1b625e408e9ed7577facf50fe5' '356d476c9db84f288e4bc7ba035135fa'\n 'ad333ec0d44e45bda0c9c726d73ebd1e' 'cd8509e28533490ea899cacc50acc484'\n '41f580daddb349c989d784323c79054e' '2c4ccc310d8c4832a302cfad81983caf'\n '181e403893ef40dc957b114a3b289701' '97f309601cfd499eb298b8bcf0a157db'\n 'abcdf319c2f74f00873b6aabaee252d3' 'b67dece446f34b48902143102b73a3e1'\n '9ddb75153d264d19ad2d632e6c333322' '742eb219d52c4ba19722a9b326998c39'\n '5a5794d466e04f458f02a64fc45e4df3' '4504a6f80f114a64a08f4980f72bf41a'\n '8a8e4e789ac240109093059b69a03acb' '991766ad43f7457081305f6e333d7fad'\n '39f623ad434e4edf858b46df609569fa' 'c43c70a51f6a4403855f7cdec415b05b'\n '320203feebad4e4b825f929377772c44' '220423c6c2174359bd3fcf1035cfeb7c'\n '201e91a942b54b1e910bba2f6fb1f5b8' '403ab1308de74135af3787ce640d4e2f'\n 'afe5082f46d14230916213a2fa50a05c' 'ad6649b8b9b841f9bca1ab4c44dec0fb'\n '6d428f1caf9447f59f1e9b3c87d50b12' '72c729464bd941748f953e745834a633'\n '60edd380ddf84f9284399a1d5f92e2e7' '337c6a3eec7c4ede8da803687af87385'\n 'cbc886debb774344ab436e74c721a5b3' '97d4c20861b84a6b8ec87d8f7ebc080d'\n '9ef733d4c16b4d17a6e45839e15bca95' '022aa3cc68734870a0ef12bb79b28fca'\n '8e97c32a926b4c0c864dcaf57ceabe5a' '8191819ad3eb4c988665406af76d945f'\n '34b42ae376a04281a2ea355af3a97228' '912724f125094b42bdd02eb9a258c1d0'\n 'e0eaadf717024e33936792f4068dabfb' 'fdc171ec493d47bcb6c2dbd8fdc45e9d'\n '43dbce56828a46d396f0f17ecb33fe79' '8e9e521295484102b4e409d6ed363d3a'\n '80aa3abbeed94f7a9f7a0400652dbb41' 'db2fbde4b4bb4c1180994428495fb6a1'\n '14d341032699499f868c9001afa19e11' 'f55a823e4cf94c9189e1e624d9f7254c'\n 'd0b7a0256d044317b48999276cd92a59' 'aa0e98655e51489b874b10ba95f1f220'\n '3a73fd7b63794cdd877b0ade4e06850c' 'aac88d6b3a1d4e94951befaec57e04e4'\n '78f0298e9fe94052a217b039efc718aa' 'fc530009d1584dd88f4e7f395438d227'\n '1211b59abc5c4a2f84ba34afd5bde594' '392b64b5824b4e99a800618a4f9708cb'\n 'be6be71924ee4f60bad920681d063366' '8eae7b2fe6354c94bf51f697a02138db'\n '3a0bc5785bec46f2a537303948ed606a' '8e9e7ad68f124b50aa27dd642f80aab4'\n '142f3bae933c4a8fbc7f14677da70f8c' '4beecba73631467f8df69efeacd4698f'\n '8ce573db161d4a0199c3a76b27bc348f' '3268db4ad280403982887ea66315ab74'\n '6faf767f1dec4f8d80e34ed960efa04a' '0e8065fdd977443a8f8013bef9f9a29b'\n 'ec171115c03346a181e0a2994f93932b' '5c12ed1572c1491b86ce4f45b7c93d56'\n '030e416eb10a40aeae24ae7635269642' 'd8d4ff58128540748e4eded824fc2dea'\n 'ad282c3e072a48408e14610404ab88f2' '45c34192480c4110b77b79f1fa9e03fa'\n '781b9a5027c74ada9bb3926d6ef6ec5e' '6167933ec8934857abccbda35387de72'\n 'f2b976889a83469ea7bc6313c9225f93' 'c7b627ee0434487898f70320f848bda1'\n '42a5d72361844d3c85fc84c6c8c60fcc' '8933ecbd4e104c778c95f1bebbbc7c53'\n '24ee5435b0f44ba0b7dc7725d8424a84' '8937ede5c75842d5adcceae0175b585e'\n '8dafb187fb2f48fab72d39110bfabd7e' 'c89ade727e8b4609864e99484f03a034'\n '3c15d91394b44c49ac51b0e3278da861' '3d33f0ab2fc849d59bced05fd3ffbe77'\n '045f684eb9e04c0eb5cc0444c6bad41a' '45eb921fd8364075af626aaf6980ee22'\n 'edaa2c4331124268942ca2e8a8cf01df' '8e6a9c2f1e974dc4a423006aa7106ff0'\n 'b79334207934423e8cbbc46d5bd3bec0' 'dd4b372c732e444ca291ebd631211c82'\n '4bfeb1aed5de4e659e43da4cc45fd397' '80f1bc53b600419b81c9e12e437ee357'\n 'bef0bee22e424b55ab5e6dcff4d77144' '61d7e90226f14a0bb5d08344e2c86a46'\n '83c955b0498f40b7959292e0593145d6' 'a5a2f0dc3cd049e6bad822724b957ca6'\n '20900b320a12488b94847b72e4322559' 'e795f1a690ac441db202909d59377d96'\n 'cc7c1c593c824b1b8c84b405b0d19a26' 'a22c09cc4d674a19a8f197a827df9ac5'\n 'd84be429a7b34266a2e1b21550371dd7' '71dc799323b342c0b73f789e8c0c2bdb'\n '7a1edbd9a2274b0ca4fb2c47cadd2774' '0347f5ef84154ba5a061ccdbee83289a'\n '4a5992c984ba4da28a653c032ce0279a' '4ed8f142300841cf95b666762928f83e'\n 'd9f39928fc284d03abe6c671ae3c7008' 'd199ab9fd8c14b5a85c045dcb64e9d2e'\n '71d34526b8584713b6da0f6cd7376c72' '8b88411ef12840c4b58fe7bdb3a61e3a'\n 'eb3cf44e7a2d4f558faf75c4beda4e08' '3e86bd341f7b480a84c0c43c96afbf7a'\n 'af2fb1ebd1584437b6a4bf147bf61392' '5567fc444fce415ea6a7875a9d65d1eb'\n '12ad770e31fe47298a19304a6c8b09ce' '6b398efd6ff840008087b3cc77632f63'\n 'da5bb1d8c06149a29fdb4ae8b6c25595' 'acac3f0566f84754b50411354720a7ff'\n '6ad4165c4819496ea0269a9494d393d4' '2f5bb9d076074087b09a024d494f6a96'\n 'f0b21399601748b3949d95bd43b62f48' 'b12998e14f0140fe84db6133c59e7a96'\n 'a223f1f93134445b8b8a5eba5236bf1f' 'cc445e1578f74ba4b084f7fc858198ec']","relationship_ids":"['f18c0f77558d41408fdd553488dbd1d6' '22db9edd3ade4328ab55f561135c6558'\n '0a0facb83f59401eb5b2524ddb3d8b3c' '0d15e237552f485b9db3d13403704eeb'\n '37d1a78bcdd5473389944fc42e2b6a05' '1309aa6396624117b9c4d666ad912cde'\n '4db4562b59374628927d5f44d398f171' '58a544acb15c4fb5a5a788c0105c4df7'\n '236a91868c8e4488bbc17bd8f125ea7e']"},{"id":"7c7634d06d3a6e9c890818571b788baa","human_readable_id":"15","text":"子学的一个分支，也不是数学的一个分支。这是就这个学科的整体而言。至于理论计算机科学，由于它可以看作是计算机科学的数学基础，在一定意义上，可以看作是数学的一个分支。另一个与计算机科学有密切关系的学科是控制论。控制论作为应用数学方法来研究机械系统和生命系统中的控制和通信现象的学科，同计算机科学有内容上的交叉，但后者不是它的一部分。自从40年代制成数字计算机以来，计算机的性能有了很大的提高。但在系统结构方面变化不大。一些计算技术发达国家正在研制新一代的计算机。这种计算机的系统结构将与过去40年的机器很不相同，所用的程序设计语言也将是新型的。计算机科学将研究由此出现的新问题，如有关并行计算的问题。\n对计算的数学性质的研究大都还是关于串行计算的，对并行计算性质的研究自70年代才发展起来，预计将成为计算机科学的中心课题之一。另一个问题是程序设计的自动化问题。在程序设计方面，明显的趋势是将机器能做的尽量交给机器去做。程序环境的研究构成了软件工程的一个中心课题。形式化方法越来越受到重视，因为它是提高自动化程度所必需的。\n早期，虽然英国的剑桥大学和其他大学已经开始教授计算机科学课程，但它只被视为数学或工程学的一个分支，并非独立的学科。剑桥大学声称有世界上第一个传授计算的资格。世界上第一个计算机科学系是由美国的普渡大学在1962年设立，第一个计算机学院于1980年由美国的东北大学设立。多数大学都把计算机科学系列为独立的部门，一部分将它与工程系、应用数学系或其他学科联合。\n\n### 21世纪\n中国在计算机科学领域发展迅速，已经到达了世界前列。\n2021年，资料显示中国在计算机科学等领域国际论文被引次数世界第一。12月27日，中国科学技术信息研究所在北京发布了《2021年中国科技论文统计报告》（以下简称《报告》）。\n2011年至2021年，中国有10个学科产出论文的比例超过世界该学科论文的20%。按国际论文被引用次数统计，中国在材料科学、化学、计算机科学、工程技术4个领域排名世界第1位——与上年度相比，增加了计算机科学领域。农业科学、生物与生物化学、环境与生态学等10个领域论文的被引用次数排名世界第2位。\n\n## 著名高校\n在计算机科学领域排名世界前五的大学：\n1. Carnegie Mellon University卡内基梅隆大学\n2. Massachusetts Institute of Technology麻省理工学院\n3. Stanford University斯坦福大学\n4. University of California -Berkeley加州大学伯克利分校\n5. Cornell University康奈尔大学\n5. University of Illinois-Urbana Champaign伊利诺伊大学香槟分校\n\n## 专业介绍\n\n### 培养目标\n本专业培养德、智、体全面发展，具有计算机应用技术的基础理论知识，具备计算机及相关设备的维护与维修、行业应用软件、平面图像处理、广告设计制作、动画制作、计算机网络及网站建设与管理、数据库管理与维护等应用能力和操作能力的高等技术应用","n_tokens":"1200","document_ids":"['65893facb6f398b52952ed4e060eda67']","entity_ids":"['356d476c9db84f288e4bc7ba035135fa' '07a56a07bc4e4533886b59bb0e6af04e'\n '9affe93f1dec4083bc3a54cac0ad198a' '6bbf8216b58f44379d3b7e8890d26e7e'\n '0b72fa9c0be143f8a5b38c6e1b185795' 'e7571c9a04834c05a670089c9a731dfa'\n '30cfc735dc8e4faba2140e86c4aff73b' 'f1ad07868c1845e19fc960e4b456e01b'\n '220423c6c2174359bd3fcf1035cfeb7c' 'c37090043e114991b026b7d65aac2a15'\n 'cb798f2d32464efd972750baef3defa5' 'c63fe5e3d3d94812a1a3f062453587c3'\n '3e0177aa1cb34795bb85f9c86099005b' '92a2d764c01d4cf69f4f732caf0d1d18'\n '444b9f1c4e71447ab9baa800311d5876' '5a709358830b4c30b5a4aa7bee57e47c'\n '10d6006381354142a0d402962625c4db' '23111c23ef7f4d1face78b77299f2b27'\n 'bede407da4734a468e69c718f96406b8' '8611034f84f2425590b9d6ba65b38484'\n 'fab408c478564899b6d799e947cff37b' 'c174be54d4774d02a4818bc1038d1486']","relationship_ids":"['ebc0c8bfa1984749bacf5ae9113607ef' '8620a3b528ac478db7f229ac56b8d6bd'\n '22db9edd3ade4328ab55f561135c6558' '75726e0785b943e6914695afdf174ad7'\n '16ab7018991e4978acaa23dcee57fe2f' '0f2554a6be6e4f0ea32a198c1dae03b9'\n '98080144e4274a12be19ef5765eae630' 'd2645c3a063a42baa627f1feefb942a6'\n '863464b8f1114eac92c4e41d187acf9a' 'c2b08cbed91d43b2884faaa5fbaf4f90'\n '56a70c4fa8624c00b001529b026871d4' '0a3e80c8d72740b5bd37888fb26d54ef'\n '78e7763094c54d47b8aec3c71082bd1a' 'd3c003ca01a14e48acac4653b4c8c9cd'\n 'a309fa62a1db4d359cd805e66b04e1c3' 'c25d2dcc624d4803903ad56218d13dc7'\n '5103051c422e4f6d9e2cf6d767adb18e' 'c5a7c9505d944fb4bd36df774fa499b4'\n 'fc073bd9dfb64a3586655d3928c71fa3' 'd1db6ec670c449bba1a64ac72efb8556'\n '2994472111324cdb961cb8fdb9c06703']"},{"id":"7f8e43a2337c1f813e2aed7c2ef29f08","human_readable_id":"16","text":"，具有计算机应用技术的基础理论知识，具备计算机及相关设备的维护与维修、行业应用软件、平面图像处理、广告设计制作、动画制作、计算机网络及网站建设与管理、数据库管理与维护等应用能力和操作能力的高等技术应用性人才。\n\n### 主要课程\n计算机应用基础、计算机组装与维护、计算机局域网络的建设与管理、网络工程、操作系统、服务器、数据库的开发与应用、网站建设与网页设计、C/C++语言、Visual Basic语言、平面设计、3D图形设计、多媒体设计、专业英语。\n\n### 就业方向\n毕业生主要面向交通系统各单位、交通信息化与电子政务建设与应用部门、各类计算机专业化公司、广告设计制作公司、汽车营销技术服务等从事IT行业工作。","n_tokens":"279","document_ids":"['65893facb6f398b52952ed4e060eda67']","entity_ids":"['9b8c115414294394a72b74f81fa007fe' 'e795f1a690ac441db202909d59377d96'\n '5a709358830b4c30b5a4aa7bee57e47c' '10d6006381354142a0d402962625c4db'\n '23111c23ef7f4d1face78b77299f2b27' '8611034f84f2425590b9d6ba65b38484'\n 'fab408c478564899b6d799e947cff37b' 'da6bead928074415afa2afdd7680d1cd'\n '71b573a9d2704d3d90cac31bdb1fe550' 'b0ac06abb0f14a079bbd4455f9b268fb'\n '39d359cefc2c4bcca680004d88365d49' '98e71023357745bfa7dbdf73df7ed0bc'\n '61aefbab950c4062bc48e1dab8179b1f' 'ca29c9645b314f81b914b06629d620bb'\n '62f78102b476419988b3a9b57acf655b' '55d853b4dab54cf2b8df4af008528a32'\n '4615a3c046824378a6ffd9402aed6f8e' 'b67eff33c8314f7cbca5f8f1cecef457'\n '9f25849736bc41518b21f1d7fd3ff7cd' 'da336f60e9a746a18ad07a0e7d71994b'\n 'dd82515fe9ee47bfb9ca8b718fa9f491' '2e3275ed5507457683508ee39cec55dc'\n '7b0ed00bc87a451db98be257a1f631dc' '1460e7e3af8344e0b34fb0ed08032a71']","relationship_ids":"['629c77c46bae490c88cf62400e710b0a' '05c962e915434395be2e982964ec8556'\n '2b5c4ca787224515b79d8463c421efe1' '2275d23620b14383b157127ac967b103'\n '5c4f2f6a3dea43d1a531a00b375699a8' 'd0df5c966f944387ab412924b9c86464'\n 'f3b8e20b66a4423f856b3ea958181c04' 'c1d5b23d64e84fd39d05476a69b8c888'\n '78548f2385d646f3aa8d9cfd681f5f90' '5caf0b57519d4196ab958e8f7b442bdc'\n '580dc63c77c3480c96ebf2746561b040' '16aba60218b5446499c7b18145e08d03'\n 'd2d74e4b01554017967480739acc71f7' '8c163586c2344901846de50b86f64447'\n '892bf56844604a25af8f36bc1853db8c' '79099176ca784f138f00e5bddc50ba09'\n 'ad4eeee2a9964df0a19c1ada30640b96' '8629de7ec01f484d900c985921cd34ba'\n 'f54a2fe87c5244dfb8cabe746f66d35d' '067f4a11ca794132ace93fb617afb6a0'\n '741fe817d4314e70a15d1e8258155f6b' 'f004444398c24941af5f93953ec925ce'\n '1153775a9b5c4f32b8fd8f23cd07f404']"},{"id":"c0b01492d7affdbf518e3d80b4174065","human_readable_id":"17","text":"机器学习是一门多领域交叉学科，涉及概率论、统计学、逼近论、凸分析、算法复杂度理论等多门学科。专门研究计算机怎样模拟或实现人类的学习行为，以获取新的知识或技能，重新组织已有的知识结构使之不断改善自身的性能。\n它是人工智能核心，是使计算机具有智能的根本途径。\n\n## 定义\n机器学习是一门多学科交叉专业，涵盖概率论知识，统计学知识，近似理论知识和复杂算法知识，使用计算机作为工具并致力于真实实时的模拟人类学习方式，并将现有内容进行知识结构划分来有效提高学习效率。\n机器学习有下面几种定义：\n（1）机器学习是一门人工智能的科学，该领域的主要研究对象是人工智能，特别是如何在经验学习中改善具体算法的性能。\n（2）机器学习是对能通过经验自动改进的计算机算法的研究。\n（3）机器学习是用数据或以往的经验，以此优化计算机程序的性能标准。\n\n## 发展历程\n机器学习实际上已经存在了几十年或者也可以认为存在了几个世纪。追溯到17世纪，贝叶斯、拉普拉斯关于最小二乘法的推导和马尔可夫链，这些构成了机器学习广泛使用的工具和基础。1950年（艾伦.图灵提议建立一个学习机器）到2000年初（有深度学习的实际应用以及最近的进展，比如2012年的AlexNet），机器学习有了很大的进展。\n从20世纪50年代研究机器学习以来，不同时期的研究途径和目标并不相同，可以划分为四个阶段。\n第一阶段是20世纪50年代中叶到60年代中叶，这个时期主要研究“有无知识的学习”。这类方法主要是研究系统的执行能力。这个时期，主要通过对机器的环境及其相应性能参数的改变来检测系统所反馈的数据，就好比给系统一个程序，通过改变它们的自由空间作用，系统将会受到程序的影响而改变自身的组织，最后这个系统将会选择一个最优的环境生存。在这个时期最具有代表性的研究就是Samuet的下棋程序。但这种机器学习的方法还远远不能满足人类的需要。\n第二阶段从20世纪60年代中叶到70年代中叶，这个时期主要研究将各个领域的知识植入到系统里，在本阶段的目的是通过机器模拟人类学习的过程。同时还采用了图结构及其逻辑结构方面的知识进行系统描述，在这一研究阶段，主要是用各种符号来表示机器语言，研究人员在进行实验时意识到学习是一个长期的过程，从这种系统环境中无法学到更加深入的知识，因此研究人员将各专家学者的知识加入到系统里，经过实践证明这种方法取得了一定的成效。在这一阶段具有代表性的工作有Hayes-Roth和Winson的对结构学习系统方法。\n第三阶段从20世纪70年代中叶到80年代中叶，称为复兴时期。在此期间，人们从学习单个概念扩展到学习多个概念，探索不同的学习策略和学习方法，且在本阶段已开始把学习","n_tokens":"1200","document_ids":"['694fa61f290bdf7c971e7d100d5386c1']","entity_ids":"['ad333ec0d44e45bda0c9c726d73ebd1e' '0a27e55a05424a55904b2be21a62e850'\n '9ddb75153d264d19ad2d632e6c333322' '4c2b612be1964c069fc3620fa23b1e92'\n '10347037cf0e4fe28b60b131bb233425' 'efe71524d8b8436aaaaa0faece344891'\n '816aae89a921498cadeefa42f3c7951e' 'febb2f2fa5c14515a6afad99fd015c89'\n '8cd1d37f383d43249b42b72133845a85' 'ff8e1fc97b834f1eaf9f7bbf11fb3eb0'\n 'a5b8bb9a11024583b99edd636ba2fa20' 'e39b77e671f143cebb2d468e05597eb7'\n 'a14b422c52df4833a27b63fe8b02d687' '5dde6c6354484d43a0d9019e8b2d575c'\n 'ca25e3ec69df40a0801b39873738e897' '44886411fdc24e6aa1b5b8e29418a4ad'\n '20d1f359dc954f26ac227e3c4142de69' 'd3782816f04e4de6993851c729997ef0'\n '7f6c6e66ffe44f23ab16a6c6fcc57ffc' '1039838dfd01401dbe225ad00bc8cefc'\n '7d70ffdc263246e2b780707985e4a734']","relationship_ids":"['ad1ce8ef223b4e8084a6a049a0c95355' '0348624ccba747409d820dbb34abc303'\n '94b7e06f9d2f4bf0a8ad6335545ffd92' '646d009faad345078a11324cf62ae85e'\n 'b8a7739df399452287a1d1a57cf1ddfd' '2c6ad2cd69ea4492a0d7d45ee6439a18'\n '8f2d8bc2941c4b08bbf15324c578ff37' '69f369df0c2b4e4d8ed6387aa4e441ef'\n 'adae63561b3c43a292e505f3e3102a3e' '86cf55480de444338c767a38f59e115d'\n '20592c57f5024812b06734bd63550a2a' '9d148ae4980a45fca6ad836f44474f24'\n 'f2399a0e28a448efaf1bb488d6ac6e5d' '19c191db0cb943298107c9e4d218bc88'\n '8ce2176fc5b3482dbc71b76d94e4e143' '21772e32a9e44a078eb35b01ed248dd5'\n '47156ece46ae465f86103150d69c0546' 'aac90488b7ca43be85a99769f0af47c5'\n '0ff1142dbe284c4a8745f4efa2036add' 'c0553269b10446778026381ad479f37a']"},{"id":"a8e7f26f1de487226620b5b26cd59761","human_readable_id":"18","text":"系统方法。\n第三阶段从20世纪70年代中叶到80年代中叶，称为复兴时期。在此期间，人们从学习单个概念扩展到学习多个概念，探索不同的学习策略和学习方法，且在本阶段已开始把学习系统与各种应用结合起来，并取得很大的成功。同时，专家系统在知识获取方面的需求也极大地刺激了机器学习的研究和发展。在出现第一个专家学习系统之后，示例归纳学习系统成为研究的主流，自动知识获取成为机器学习应用的研究目标。1980年，在美国的卡内基梅隆（CMU）召开了第一届机器学习国际研讨会，标志着机器学习研究已在全世界兴起。此后，机器学习开始得到了大量的应用。1984年，Simon等20多位人工智能专家共同撰文编写的MachineLearning文集第二卷出版，国际性杂志Machine Learning创刊，更加显示出机器学习突飞猛进的发展趋势。这一阶段代表性的工作有Mostow的指导式学习、Lenat的数学概念发现程序、Langley的BACON程序及其改进程序。\n第四阶段20世纪80年代中叶，是机器学习的最新阶段。这个时期的机器学习具有如下特点：\n（1）机器学习已成为新的学科，它综合应用了心理学、生物学、神经生理学、数学、自动化和计算机科学等形成了机器学习理论基础。\n（2）融合了各种学习方法，且形式多样的集成学习系统研究正在兴起。\n（3）机器学习与人工智能各种基础问题的统一性观点正在形成。\n（4）各种学习方法的应用范围不断扩大，部分应用研究成果已转化为产品。\n（5）与机器学习有关的学术活动空前活跃。\n\n## 研究现状\n机器学习是人工智能及模式识别领域的共同研究热点，其理论和方法已被广泛应用于解决工程应用和科学领域的复杂问题。2010年的图灵奖获得者为哈佛大学的Leslie vlliant教授，其获奖工作之一是建立了概率近似正确（Probably Approximate Correct，PAC）学习理论；2011年的图灵奖获得者为加州大学洛杉矶分校的Judea Pearll教授，其主要贡献为建立了以概率统计为理论基础的人工智能方法。这些研究成果都促进了机器学习的发展和繁荣。\n机器学习是研究怎样使用计算机模拟或实现人类学习活动的科学，是人工智能中最具智能特征，最前沿的研究领域之一。自20世纪80年代以来，机器学习作为实现人工智能的途径，在人工智能界引起了广泛的兴趣，特别是近十几年来，机器学习领域的研究工作发展很快，它已成为人工智能的重要课题之一。机器学习不仅在基于知识的系统中得到应用，而且在自然语言理解、非单调推理、机器视觉、模式识别等许多领域也得到了广泛应用。一个系统是否具有学习能力已成为是否具有“智能”的一个标志。机器学习的研究主要分为两类研","n_tokens":"1200","document_ids":"['694fa61f290bdf7c971e7d100d5386c1']","entity_ids":"['ad333ec0d44e45bda0c9c726d73ebd1e' '214681eb6e7447569eef2d900d9497c2'\n 'cf578bc8c67245eebcbcacf6742fb847' '8dc54cb7682244d7a234d55f1ae6c45f'\n 'caee7421d15e4983b60640f8577c1e36' '6bbf8216b58f44379d3b7e8890d26e7e'\n '158c4c628b9f4c859f9d72fd86451673' '39f623ad434e4edf858b46df609569fa'\n '4c2b612be1964c069fc3620fa23b1e92' 'a0d9c0fb1baa43b9b7227d4132cfac59'\n '6990b4c246d54167b0db095c886c9f14' '7e1d4856928a4768bd19eafcaaa8d3c1'\n '9978b3b45668444eb3dc3150c1733899' '8fd1897eef894e458a035180b3e2d40d'\n '281e4833485b40bfbcb9af7d8188767c' 'c23849db3a78454381403c7780ca757c'\n '9ff1a913d77248ce8225f138f76f6125' '1ab3d884eb9842b58b64ab1076b23007'\n '269077e3cc804ee796dc56cd2b4f67cd' '1bd3899cfff64665ab270067966a2f94'\n '21109c8ab9a3467d8add41119bda2dce' '4d7a701a699e4c22b9e8e1827d536789'\n '1ea39c9172bb4d109b918b54b8344d33' '03f25001476346cb8e19cc5ffad01993'\n 'b05ec2f1ec6940a7b092973f1738aa5d' '9f26b09150844628bf28ec492fd49a04'\n 'e38e3cea2679468ea92d1180b313539d' 'd32c5d392d3546f380e271cd2633a5ce'\n '7385239021e54a918dcd0d651cebb5a7' 'acb75fc335264aa78223228699822e0f'\n '04365a81ca7644a2b65801386058a387' 'e948cce64ad749d8af7d621f63f20f70'\n 'c54d73a1170d431294cc7592339c4721' '40fd268d97cf419cb801544b20b7b0c1'\n '01e7d949af8b4b5fa5d6fb8b8acead23' 'f9c660d9d41741068c1951d5d4e3915c'\n '1128ff01cf54458fb113aa0438cc1605' 'ddb5a37ee74d4e7cb75c77fc1754ef99'\n '6c8615bbaa934f4cbd6143caf9ae1e75' 'b182ac8ddb744fc4aa4221daba56af4a'\n '0ffb256d0e1a46778cb50fe21fa5d571' '2065ab7cd88d4e8b98531786ba47ef42'\n '4cfbdf2fa7644f3d97504a24eb93c406' '7b654af6cd444fc7846b7713b2e7a183'\n 'dddba0fc537540079d3b030a11c56406' '805de72bb83e4737add3b89741c44f18'\n '2e89d76e032f4184a222878571593bdf' '9aac01e9300d43f7a90e9e966bbaf450'\n '86eeddccecde44e082f6ee52a3a92850' 'c248d72758db468d83a5d325cae4def6'\n 'd0b510aa6c1b4899bb21a809e4ff4513' '8ce4455ab2a94b049ccfecb36b6ddf11'\n '50f6d36bc5724125b3df39d81f2d014f' '13f533eee2f24bac85167e079ef35ff1'\n 'e0e14b0975c644f5ad4aeedc87a66fb0' 'cfd7d98cbaa24cadb66f021b028357e9'\n 'd554f42380ab40c28d9db2d999eda575' 'f8d29c91fe334638a2c9708439b0ca3c'\n 'c93006b2370445f2b53285ee4c5c1f10' 'c9cd128a8c3f462b984f3ed2b8749be5'\n 'fc2bdc76b72741b2896dcc1de8aa5d17' '845d87e281ef4280809b8753e17d5a54'\n '0606f1a0aea64fdeb01912d9e76a8d7f' '1110a3a447fd4ef88e83573f0f2ca6c8'\n 'bdd85f43ae384cfc82ecdfe6cc5ecd98' 'e345acfb8d90444f89298c7102d19f2d'\n '3094064e140644f6a205842bef7f91b7' '4e5f32acfb0849be86796cd34a2a079e'\n '46b75ad66489407bb4afd71b47ff338b' '548e3cc126fd4a59be088cf1a9b1ec1e'\n '8a91bab978494ae99148e7854815ac88' '815a6e95dfb24adf90a375468fa67f1a'\n 'e59f8f10e1214ec9adac39f71c6dea7c' '5d314b547d28449a95ceba70d350b6c1'\n '794e164555de4d3c80b869210385e185' '42902aa76de74bb58a7e77a363b3ebad'\n '289dcb8c5e064b93b66b04d1784946ea' 'dfe325843c264e6287a1900f3ef3f808'\n '777f475e533e4f798329b1b34a949026' '7d4d166ef17141f89c2635e8c6cfbf32'\n 'e77e4f566d4049378e92d9c7015dd6f6' 'd6abc9f71024470d988d176718b0e31f'\n '0ebcadb650d14b9a85470392b41c6bbd']","relationship_ids":"['8edf28862c8e4d54be0eef53bab88de0' '5078236abe854bf4aae10b1c64193edd'\n '0840ebfe048f4ed994c4dea740f51f05' 'd5bed24f2cde4eabbbf8503a845e9b72'\n '38906e367afe4cd0aca105eba7a50ed8' 'c085c65c46ac4ce0b8bfb63dcc065430'\n 'fd75c5899a9c488c93ca4da36ef255d5' '4892ab13d37c4d83bc2449a687e6b0ac'\n 'e6a3093b7f3d4483aa737fcedb16859a']"},{"id":"688538f89533da2b365780aff864633e","human_readable_id":"19","text":"�的系统中得到应用，而且在自然语言理解、非单调推理、机器视觉、模式识别等许多领域也得到了广泛应用。一个系统是否具有学习能力已成为是否具有“智能”的一个标志。机器学习的研究主要分为两类研究方向：第一类是传统机器学习的研究，该类研究主要是研究学习机制，注重探索模拟人的学习机制；第二类是大数据环境下机器学习的研究，该类研究主要是研究如何有效利用信息，注重从巨量数据中获取隐藏的、有效的、可理解的知识。\n机器学习历经70年的曲折发展，以深度学习为代表借鉴人脑的多分层结构、神经元的连接交互信息的逐层分析处理机制，自适应、自学习的强大并行信息处理能力，在很多方面收获了突破性进展，其中最有代表性的是图像识别领域。\n\n### 传统机器学习的研究现状\n传统机器学习的研究方向主要包括决策树、随机森林、人工神经网络、贝叶斯学习等方面的研究。\n决策树是机器学习常见的一种方法。20世纪末期，机器学习研究者J.Ross Quinlan将Shannon的信息论引入到了决策树算法中，提出了ID3算法。1984年I.Kononenko、E.Roskar和I.Bratko在ID3算法的基础上提出了AS-SISTANTAlgorithm，这种算法允许类别的取值之间有交集。同年，A.Hart提出了Chi-Squa统计算法，该算法采用了一种基于属性与类别关联程度的统计量。1984年L.Breiman、C.Ttone、R.Olshen和J.Freidman提出了决策树剪枝概念，极大地改善了决策树的性能。1993年，Quinlan在ID3算法的基础上提出了一种改进算法，即C4.5算法。C4.5算法克服了ID3算法属性偏向的问题增加了对连续属性的处理通过剪枝，在一定程度上避免了“过度适合”现象。但是该算法将连续属性离散化时，需要遍历该属性的所有值，降低了效率，并且要求训练样本集驻留在内存，不适合处理大规模数据集。2010年Xie提出一种CART算法，该算法是描述给定预测向量X条件分布变量Y的一个灵活方法，已经在许多领域得到了应用。CART算法可以处理无序的数据，采用基尼系数作为测试属性的选择标准。CART算法生成的决策树精确度较高，但是当其生成的决策树复杂度超过一定程度后，随着复杂度的提高，分类精确度会降低，所以该算法建立的决策树不宜太复杂。2007年房祥飞表述了一种叫SLIQ（决策树分类）算法，这种算法的分类精度与其他决策树算法不相上下，但其执行的速度比其他决策树算法快，它对训练样本集的样本数量以及属性的数量没有限制。SLIQ算法能够处理大规模的训练样本集，具有较好的伸缩性；执行速度快而且能生成较小的二叉决策树。SLIQ算法允许多个处理器同时处理属性表，从而实现了并行性。但是SLIQ算法依然不能摆脱主存容量的限制。2000年RajeevRaSto等","n_tokens":"1200","document_ids":"['694fa61f290bdf7c971e7d100d5386c1']","entity_ids":"['57a1b2926df247b5a5cf626901ade6a4' '4c2b612be1964c069fc3620fa23b1e92'\n '44886411fdc24e6aa1b5b8e29418a4ad' '7f04aa47f3c54d10ba58988f64147c69'\n 'd491c88831b04720ae5b9ce5bdac1679' 'b0cb3027ab0f4dd482d2be374269bc49'\n 'd73b965bbfb94e7bb684bb1de7e548ef' '567285f1db1d422383bbcff2f89fed02'\n '8c1a53aa9816416b8ad34e3043bd8b04' '114588d933484a2b98df1c216cc04878'\n 'f45db847af5d49848cc4dac52db72a68' '0877f62955924a778889f10b46b5e1c1'\n 'eb21d293711646c79636c52e87e10da8' '0c6cd93bbce141aea25f0388a4607b4e'\n '4b373dbb947a4aff84a807da83d8797c']","relationship_ids":"['f69c988539fc4a20b8b87779d33e9a39' 'c5ef0860b3f84e0ea8595b9c7848309b'\n '76b0a6e8f1724623ab2eb9a097c5f293' '9107b793485344a58ca3a5f53b918366'\n '8ce2176fc5b3482dbc71b76d94e4e143' 'e47f9b82c9614a4a8b73f8987ae28963'\n '78653ff5ef70474a9ab953937acd016d' '9f0e43ae50664f72949e328311a0556c'\n 'ed0a12f9ce704cbdb415031b97ec52f7' '962367d10044494fb1d7ebdae2118708'\n 'e6afbb514ecf4f23b7772a7fb8a26358' 'ce6f96c8d80d4fe6bb93ab85429936e0'\n 'c72132b010a74cbfb86e98c59c7dcbcb' 'ad77ec94437547089bf242fd20fcf7c6'\n '56e29382077345239a573d0a6f4283a5' '196e563ce4e6414da961634c6790e1ce'\n '51c82a310a004f8c930dd775fb021d4a' 'a5d157dd5508447abdcf1819454265fd']"},{"id":"7c6b3297d40a2d8aed748d3c6131e55d","human_readable_id":"20","text":"样本集，具有较好的伸缩性；执行速度快而且能生成较小的二叉决策树。SLIQ算法允许多个处理器同时处理属性表，从而实现了并行性。但是SLIQ算法依然不能摆脱主存容量的限制。2000年RajeevRaSto等提出了PUBLIC算法，该算法是对尚未完全生成的决策树进行剪枝，因而提高了效率。近几年模糊决策树也得到了蓬勃发展。研究者考虑到属性间的相关性提出了分层回归算法、约束分层归纳算法和功能树算法，这三种算法都是基于多分类器组合的决策树算法，它们对属性间可能存在的相关性进行了部分实验和研究，但是这些研究并没有从总体上阐述属性间的相关性是如何影响决策树性能。此外，还有很多其他的算法，如Zhang.J于2014年提出的一种基于粗糙集的优化算法、Wang.R在2015年提出的基于极端学习树的算法模型等。\n随机森林（RF）作为机器学习重要算法之一，是一种利用多个树分类器进行分类和预测的方法。近年来，随机森林算法研究的发展十分迅速，已经在生物信息学、生态学、医学、遗传学、遥感地理学等多领域开展的应用性研究。\n人工神经网络（Artificial Neural Networks，ANN）是一种具有非线性适应性信息处理能力的算法，可克服传统人工智能方法对于直觉，如模式、语音识别、非结构化信息处理方面的缺陷。早在20世纪40年代人工神经网络已经受到关注，并随后得到迅速发展。\n贝叶斯学习是机器学习较早的研究方向，其方法最早起源于英国数学家托马斯，贝叶斯在1763年所证明的一个关于贝叶斯定理的一个特例。经过多位统计学家的共同努力，贝叶斯统计在20世纪50年代之后逐步建立起来，成为统计学中一个重要的组成部分。\n\n### 大数据环境下机器学习的研究现状\n大数据的价值体现主要集中在数据的转向以及数据的信息处理能力等等。在产业发展的今天，大数据时代的到来，对数据的转换，数据的处理数据的存储等带来了更好的技术支持，产业升级和新产业诞生形成了一种推动力量，让大数据能够针对可发现事物的程序进行自动规划，实现人类用户以计算机信息之间的协调。另外现有的许多机器学习方法是建立在内存理论基础上的。大数据还无法装载进计算机内存的情况下，是无法进行诸多算法的处理的，因此应提出新的机器学习算法，以适应大数据处理的需要。大数据环境下的机器学习算法，依据一定的性能标准，对学习结果的重要程度可以予以忽视。采用分布式和并行计算的方式进行分治策略的实施，可以规避掉噪音数据和冗余带来的干扰，降低存储耗费，同时提高学习算法的运行效率。\n随着大数据时代各行业对数据分析需求的持续增加，通过机器学习高效地获取知识，已逐渐成为当今机器学习技术发展的主要推动力。大数据时代的机器学习更强调“学习本身是手段\"机器学习成为一种支持和服务技术。如何基于机","n_tokens":"1200","document_ids":"['694fa61f290bdf7c971e7d100d5386c1']","entity_ids":"['0a27e55a05424a55904b2be21a62e850' '07a56a07bc4e4533886b59bb0e6af04e'\n '54d488bd349742d4b703cfe33c1308a4' '4c2b612be1964c069fc3620fa23b1e92'\n '7f04aa47f3c54d10ba58988f64147c69' 'd491c88831b04720ae5b9ce5bdac1679'\n 'b0cb3027ab0f4dd482d2be374269bc49' 'd73b965bbfb94e7bb684bb1de7e548ef'\n '0877f62955924a778889f10b46b5e1c1' 'ead37e762d7442e88c09ae685880b44e'\n '7838270e64434bab8744459898bd0a8d' '3ee6aa5037aa4e968ee4810ed06e5e50'\n '26614e30550c4a5c881dc840b8d387a2' 'dfd23a9993ad4a50a8d7b8dc47bec512'\n '27365dec513846949f66f57a95a26837' '0df351bc08ec4d988ad516e4a9aa23c3'\n 'd5d14fa2182b488198d100cb50d36f38' '80f4c2e2e39a4663bcf3be5567abf979'\n '1f16ad415c624c50a0b8307952c05eaa' '5f122c522d44477f96424a37eda1b999'\n '739c05f47dc34c42971a6022baafc397' 'a5afac75b2d248a19a1b1d32b78bfe0c'\n '7358da4947934417919deeff0a0571b7' '8d89f8bdfca54f11a79b148b3aedd09b'\n 'c9579f7c47ea457ea34b017e270c80f2' '769fe7ccdaa94baf835f21ae07d4b075'\n '3e020f55be0448329bfd16b0c0f03849' '4b5e7a76ea3d442a8fda0b8ce318b0fc'\n '1b913baa3b064ef1bcf65a960025e17d' '04a70917a38f4ce5996632a854f672fa']","relationship_ids":"['259dbdca1d6041fca8c5b97f6c6dda98' 'b8d70247b1fc44698e8f2a8956917ac4'\n '1a5ea1ab839448d1a4cadc6a38a828e9' '335eb427a24e4d36acceeeb3706080a3'\n '293902497b064e819897c6261487bbc0' '78653ff5ef70474a9ab953937acd016d'\n '9f0e43ae50664f72949e328311a0556c' 'ed0a12f9ce704cbdb415031b97ec52f7'\n '56e29382077345239a573d0a6f4283a5' 'c5386e7a68de4be899527fbccbedd0ca'\n 'd4ae674bfcc344649043613355c3d85c' 'a8a348d8b7b642948e62c43c87b878dd'\n 'dfad397a18184831b42b90baf333ad69' '9679f253c197480793a912583af29383'\n '6ad871c1878843529ea5102d63eb6c7e' 'e80ac2c999b44877a356c5fe1b5d7571'\n 'a2b3d1d25bc84e0fb3cf44514d2073df' '0934553e0b7448c1bc9603e50620b315'\n 'c9e13506fba249ed89f2c99db3dfd1ef' '77468f86200d41789deb04eccfd7e695'\n '6afb9293e49b48aa83aec89e6f12b610' 'cbe723ec008d47d186fadbeeaa91a8f9'\n '540d405ab8e74a12b161edfb26baf6c6' '4c7cb3036c4741c4b5f083c4cc092679'\n '2c6fa26262b94339bdc580f105d6ed5a' '3ab846164780402e9e9d120ce3182d7e'\n '739a812933c6416b9498ea10bb671782' '2009ccab14164475bc57501261aa9bab'\n '52da9c3e4d934c8dbf613c0335267157' '6fa16fd6c6a14efca28d20ad8c16356c'\n 'de714195c03f41f8928cfba839299d48' '98c86e352435489bbbece760f47a0ed7']"},{"id":"6ac04a92d7c47423e7d4424114cf1b0b","human_readable_id":"21","text":"业对数据分析需求的持续增加，通过机器学习高效地获取知识，已逐渐成为当今机器学习技术发展的主要推动力。大数据时代的机器学习更强调“学习本身是手段\"机器学习成为一种支持和服务技术。如何基于机器学习对复杂多样的数据进行深层次的分析，更高效地利用信息成为当前大数据环境下机器学习研究的主要方向。所以，机器学习越来越朝着智能数据分析的方向发展，并已成为智能数据分析技术的一个重要源泉。另外，在大数据时代，随着数据产生速度的持续加快，数据的体量有了前所未有的增长，而需要分析的新的数据种类也在不断涌现，如文本的理解、文本情感的分析、图像的检索和理解、图形和网络数据的分析等。使得大数据机器学习和数据挖掘等智能计算技术在大数据智能化分析处理应用中具有极其重要的作用。在2014年12月中国计算机学会（CCF）大数据专家委员会上通过数百位大数据相关领域学者和技术专家投票推选出的“2015年大数据十大热点技术与发展趋势”中，结合机器学习等智能计算技术的大数据分析技术被推选为大数据领域第一大研究热点和发展趋势。\n\n## 机器学习的分类\n几十年来，研究发表的机器学习的方法种类很多，根据强调侧面的不同可以有多种分类方法。\n\n### 基于学习策略的分类\n（1）模拟人脑的机器学习\n符号学习：模拟人脑的宏现心理级学习过程，以认知心理学原理为基础，以符号数据为输入，以符号运算为方法，用推理过程在图或状态空间中搜索，学习的目标为概念或规则等。符号学习的典型方法有记忆学习、示例学习、演绎学习.类比学习、解释学习等。\n神经网络学习（或连接学习）：模拟人脑的微观生理级学习过程，以脑和神经科学原理为基础，以人工神经网络为函数结构模型，以数值数据为输入，以数值运算为方法，用迭代过程在系数向量空间中搜索，学习的目标为函数。典型的连接学习有权值修正学习、拓扑结构学习。\n（2）直接采用数学方法的机器学习\n主要有统计机器学习。\n统计机器学习是基于对数据的初步认识以及学习目的的分析，选择合适的数学模型，拟定超参数，并输入样本数据，依据一定的策略，运用合适的学习算法对模型进行训练，最后运用训练好的模型对数据进行分析预测。\n统计机器学习三个要素：\n模型（model）：模型在未进行训练前，其可能的参数是多个甚至无穷的，故可能的模型也是多个甚至无穷的，这些模型构成的集合就是假设空间。\n策略（strategy）：即从假设空间中挑选出参数最优的模型的准则。模型的分类或预测结果与实际情况的误差（损失函数）越小，模型就越好。那么策略就是误差最小。\n算法（algorithm）：即从假设空间中挑选模型的方法（等同于求解最佳的模型参数）。机器学习的参数求解通常都会转化为最优化问题，故学习算法通常是最优化算法，例如最速梯度下降法","n_tokens":"1200","document_ids":"['694fa61f290bdf7c971e7d100d5386c1']","entity_ids":"['0a27e55a05424a55904b2be21a62e850' '9ddb75153d264d19ad2d632e6c333322'\n '4c2b612be1964c069fc3620fa23b1e92' '27365dec513846949f66f57a95a26837'\n '5c8b43c0c7f44686ba4ff072d385c1c7' '8c9bb3981a8741b188bd4d57d22627a9'\n '2d3e806484af45e7bef22838065b85d3' 'f37728a07ba84dfdb4ced37f2ead24b8'\n 'cdbc424d28d54c099808951977f637ff' '31ccc0fbe99747ffbc975f26852184e3'\n '25c614ad578b474f96c9e0eadc1df38b' '9dd95502b1b545e48875011353bbbf4d'\n 'b4b0cff823664b00ab54d1a7d07174c0' 'd521f70acb5e4a1f8cbe591688aafcf4'\n '465e19ee02944b6bb99fdde5817449ef']","relationship_ids":"['0348624ccba747409d820dbb34abc303' '259dbdca1d6041fca8c5b97f6c6dda98'\n 'b5aa851668b947acac4510ceea60d240' '4a28d11e649e4f13ae78e910e80bb955'\n '60459d6005b849abaaa30bdd977e0941' '8b11988664ec4796be476a4c486a3af5'\n '7322f2ae63ab42f69a963fd6aeca8631' '56c9b0081b384d3ca761d39c3a76cdac'\n 'c0bc8321e46a43ea8bd73fe0641bf6df' '9df8f5c2be204399b58e1b7351b85865'\n '5579f100a62041669427ecd011f6ece9' '96bc4ab604e54d5a9ac8f49f1c50aaa9'\n '6742eae33db546fc9d3214e36d65345a' '2c1d3ed55efc40cbbd2af598e35e7490'\n '453577e6ad614f438f6662d9e4d9d1ad' 'ea17b26f5e4b4257a9aec9f5d5dd7e62'\n '66962f46f9524eba89091484767b31e4' 'a472edeb86fc482ba14a88a24bf98e55'\n '5b0bc47ffd49474c8d83656b7bdd6427']"},{"id":"ca20fa90742a6514fd6517e8c432455c","human_readable_id":"22","text":"好。那么策略就是误差最小。\n算法（algorithm）：即从假设空间中挑选模型的方法（等同于求解最佳的模型参数）。机器学习的参数求解通常都会转化为最优化问题，故学习算法通常是最优化算法，例如最速梯度下降法、牛顿法以及拟牛顿法等。\n\n### 基于学习方法的分类\n（1）归纳学习\n符号归纳学习：典型的符号归纳学习有示例学习、决策树学习。\n函数归纳学习（发现学习）：典型的函数归纳学习有神经网络学习、示例学习、发现学习、统计学习。\n（2）演绎学习\n（3）类比学习：典型的类比学习有案例（范例）学习。\n（4）分析学习：典型的分析学习有解释学习、宏操作学习。\n\n### 基于学习方式的分类\n（1）监督学习（有导师学习）：输入数据中有导师信号，以概率函数、代数函数或人工神经网络为基函数模型，采用迭代计算方法，学习结果为函数。\n（2）无监督学习（无导师学习）：输入数据中无导师信号，采用聚类方法，学习结果为类别。典型的无导师学习有发现学习、聚类、竞争学习等。\n（3）强化学习（增强学习）：以环境反馈（奖/惩信号）作为输入，以统计和动态规划技术为指导的一种学习方法。\n\n### 基于数据形式的分类\n（1）结构化学习：以结构化数据为输入，以数值计算或符号推演为方法。典型的结构化学习有神经网络学习、统计学习、决策树学习、规则学习。\n（2）非结构化学习：以非结构化数据为输入，典型的非结构化学习有类比学习案例学习、解释学习、文本挖掘、图像挖掘、Web挖掘等。\n\n### 基于学习目标的分类\n（1）概念学习：学习的目标和结果为概念，或者说是为了获得概念的学习。典型的概念学习主要有示例学习。\n（2）规则学习：学习的目标和结果为规则，或者为了获得规则的学习。典型规则学习主要有决策树学习。\n（3）函数学习：学习的目标和结果为函数，或者说是为了获得函数的学习。典型函数学习主要有神经网络学习。\n（4）类别学习：学习的目标和结果为对象类，或者说是为了获得类别的学习。典型类别学习主要有聚类分析。\n（5）贝叶斯网络学习：学习的目标和结果是贝叶斯网络，或者说是为了获得贝叶斯网络的一种学习。其又可分为结构学习和多数学习。\n\n## 常见算法\n\n### 决策树算法\n决策树及其变种是一类将输入空间分成不同的区域，每个区域有独立参数的算法。决策树算法充分利用了树形模型，根节点到一个叶子节点是一条分类的路径规则，每个叶子节点象征一个判断类别。先将样本分成不同的子集，再进行分割递推，直至每个子集得到同类型的样本，从根节点开始测试，到子树再到叶子节点，即可得出预测类别。此方法的特点是结构简单、处理数据效率较高。\n\n### 朴素贝叶斯算法\n朴","n_tokens":"1200","document_ids":"['694fa61f290bdf7c971e7d100d5386c1']","entity_ids":"['9ddb75153d264d19ad2d632e6c333322' '2d3e806484af45e7bef22838065b85d3'\n 'b2c1a10718f14f849db8ea610786e335' '282581550287485fa72016bd25f24275'\n '3633d0efae884fd8a67adb9987e4e255' '89d76f1a4379476e892bced97035391d'\n 'db97eb2f65b7479995e449a20f7d6904' '305eef0404f44e7eb2fb6baf9d5332fc'\n 'b4a4d1ec43904612b379e36f6d97aad1' '3a7b121031c344c88ac89a617242923c'\n '6940657f1ebf4987823f64a03d903c30' 'b10fea5f7a1a43ccb6daadf4e2d67585'\n '4f72bb7c71c24be6954f853f02d29e12' '4e678af966274635b629be61698c6dcd'\n '3afa71209410463696935a2f5e723da9' '41f1edaff2ba497e866c578bfa91c218'\n '6aac50b3f96e47d8a9896ad1ec31f579' '63c22bd2717145bf884e3b602b4371c7'\n 'df07111e9ea84fa9837a43e0d49181d9' 'f3ece380d4e1422590c4304707f36972'\n 'e957c1657a1f494f82fba4916fb1b432' '3727b2c2b0be4853af843fd19c97deac'\n '3d18be55b2574ddca6f95455a247c313' '637b9949da394427a6b7f8ee5aa6217d'\n '7e40c0f19f7d4daab363f5f84bea89db' 'dc608f36411749ccbee74484720c3b40'\n '9c53b74820c24f46b50e90997a13eeed' '2a245f85ebdb46d182008f60ffbb5b75'\n '5ea8e8cc4f3f425a90c886bfce17fbe0' '494d5c754eb847749bfbc5a3ef9ab1d3'\n 'ea4970c55aa943cbba359f8203884fc7' '7b49ac86cda046ba84c665817a7849c7']","relationship_ids":"['afd68c98999b4dd59000d8237feedd41' '7f35391fd922448db5e1c36ecced347f'\n 'd9d050493302453797b6815b5ce06e20' '3524b6f10c22481dafa4ac3a8016ddaf'\n '0bc15d846d944639ac461bccd2bc911e' 'e23189bf898b4623839e2c8250541dfa'\n '93c4499bbc6c4ab39e6692e89ff3ae3c' '9895fc740b1940e89146d9d09a2e3f7d'\n 'e8a88d6ab6ae45459078fba16556cea2' '6ceb7eedee68434aab8cc62a37700496'\n '4082d2fd76294f139b53b4c13e444977' 'f6a024fb18424713936037d32fe8f54b'\n '63ad8d1d91ad4bc28a1ee071b87d28fa' '932fbe42e3c64922801c79fb5eafa9b9'\n '1ca7171f6cde4a4db78ad9af15694d8e' '3598be04a09c475fbc793fd9cd861115'\n '4de196b6394e4b59a48f13974f09d885' '9e7cef17093e4af38e35c1dc77d3c31f'\n '95400f9e25fc4fd68c497bce50a1900e' 'd62bfcecc9874e0ca55bb9212f8a3143'\n '723761f48fb147fab78e8c2922c0aca9' '5cda4a3419574cafa30596059d1db38f'\n '412191ebd0d3473bbff64775460e1df6' 'da8705c2c0c0493aa7724405626d5b5a'\n '24b51231b5574989b9c349fe997c9d9b' '9ed78e06df5a4407b8cd9363acfff59f'\n 'd7a4d5addd8a453bbdd7016db0628135' '90d6a7b2721a416b9786eb941be2ddcc'\n '866d7e05a70b48e0ae1af3a62f959e87' 'f514e0bf670d4386a995ebca5c7dd658'\n 'a2608bf5c56347ab96aca400c8e484b3' 'f8ee1e2ace064acbbbe0fecbdc0c69cf'\n 'a442262fe3bc41e792c006069a5c6fdc' '95637e7d3f664cd9965246aa6f31b66f']"},{"id":"68eebc705cde604a27af6056ef714a08","human_readable_id":"23","text":"别。先将样本分成不同的子集，再进行分割递推，直至每个子集得到同类型的样本，从根节点开始测试，到子树再到叶子节点，即可得出预测类别。此方法的特点是结构简单、处理数据效率较高。\n\n### 朴素贝叶斯算法\n朴素贝叶斯算法是一种分类算法。它不是单一算法，而是一系列算法，它们都有一个共同的原则，即被分类的每个特征都与任何其他特征的值无关。朴素贝叶斯分类器认为这些“特征”中的每一个都独立地贡献概率，而不管特征之间的任何相关性。然而，特征并不总是独立的，这通常被视为朴素贝叶斯算法的缺点。简而言之，朴素贝叶斯算法允许使用概率给出一组特征来预测一个类。与其他常见的分类方法相比，朴素贝叶斯算法需要的训练很少。在进行预测之前必须完成的唯一工作是找到特征的个体概率分布的参数，这通常可以快速且确定地完成。这意味着即使对于高维数据点或大量数据点，朴素贝叶斯分类器也可以表现良好。\n\n### 支持向量机算法\n基本思想可概括如下：首先，要利用一种变换将空间高维化，当然这种变换是非线性的，然后，在新的复杂空间取最优线性分类表面[8]。由此种方式获得的分类函数在形式上类似于神经网络算法。支持向量机是统计学习领域中一个代表性算法，但它与传统方式的思维方法很不同，输入空间、提高维度从而将问题简短化，使问题归结为线性可分的经典解问题。支持向量机应用于垃圾邮件识别，人脸识别等多种分类问题。\n\n### 随机森林算法\n控制数据树生成的方式有多种，根据前人的经验，大多数时候更倾向选择分裂属性和剪枝，但这并不能解决所有问题，偶尔会遇到噪声或分裂属性过多的问题。基于这种情况，总结每次的结果可以得到袋外数据的估计误差，将它和测试样本的估计误差相结合可以评估组合树学习器的拟合及预测精度。此方法的优点有很多，可以产生高精度的分类器，并能够处理大量的变数，也可以平衡分类资料集之间的误差。\n\n### 人工神经网络算法\n人工神经网络与神经元组成的异常复杂的网络此大体相似，是个体单元互相连接而成，每个单元有数值量的输入和输出，形式可以为实数或线性组合函数。它先要以一种学习准则去学习，然后才能进行工作。当网络判断错误时，通过学习使其减少犯同样错误的可能性。此方法有很强的泛化能力和非线性映射能力，可以对信息量少的系统进行模型处理。从功能模拟角度看具有并行性，且传递信息速度极快。\n\n### Boosting与Bagging算法\nBoosting是种通用的增强基础算法性能的回归分析算法。不需构造一个高精度的回归分析，只需一个粗糙的基础算法即可，再反复调整基础算法就可以得到较好的组合回归模型。它可以将弱学习算法提高为强学习算法，可以应用到其它基础回归算法，如线性回归、神经网络等，来提高精度。Bagging和前一种算法大体相似但又略有差别，主要想法是","n_tokens":"1200","document_ids":"['694fa61f290bdf7c971e7d100d5386c1']","entity_ids":"['7f04aa47f3c54d10ba58988f64147c69' '63c22bd2717145bf884e3b602b4371c7'\n '7985c46d2346447a9a95c95eb3a7efd7' '2f9f78feeb574caea2dc8fbf6bed0f63'\n 'b93350caf1464597a3b197235242fbe8' 'b2f62c258e2840ea9fb285a81077f2ee'\n 'f16ddac5840740a8ad4fb8e8271c7214' '3d3885f5a20e43c29ccaeff1433b19a8'\n 'ad488adacdc84960a55448899b9725ad' '13b29f2fc31f4599bd9f500cfd7a932f'\n 'bd3f1b61b5274ef0841dc7d441b4d2f1' 'c432bc48e61a4c8a92937875fca13d39']","relationship_ids":"['23b5fc7d3fa544f9a3227109437f4560' '50c32cee872b42ecb351308edfe93771'\n '1f3cb62c24984ecfbd7fb85d318a5964' 'b800b050e6d24bdcb85d71a8d33ab562'\n 'daaadfa4c7c7480dbf5b3ad7417d4aa6' 'fc0c3e4006864ef38396cc8d0a6e1f84'\n 'f231a585154c41c7a852ae3c4f31403b' '43f3533cacb14b2ea44e47665200eace'\n 'bdd1cdc9877f470189be081afd7e0cb1' 'd172e6180dab4592bcd1f1424ac3d645'\n '18515d6ba0654de684dc7b8849f4957d' '0eef331cc5374d9089252039060309bf'\n '04def527634e463fab8cf927c056b1be' '541662fd25ca4824ad114dc5afab2614'\n '56b396120b5446d9951db1ae7d79ecc3']"},{"id":"b4ca85695044b5c3df8909ad7af98094","human_readable_id":"24","text":"到较好的组合回归模型。它可以将弱学习算法提高为强学习算法，可以应用到其它基础回归算法，如线性回归、神经网络等，来提高精度。Bagging和前一种算法大体相似但又略有差别，主要想法是给出已知的弱学习算法和训练集，它需要经过多轮的计算，才可以得到预测函数列，最后采用投票方式对示例进行判别。\n\n### 关联规则算法\n关联规则是用规则去描述两个变量或多个变量之间的关系，是客观反映数据本身性质的方法。它是机器学习的一大类任务，可分为两个阶段，先从资料集中找到高频项目组，再去研究它们的关联规则。其得到的分析结果即是对变量间规律的总结。\n\n### 期望最大化算法\nEM（期望最大化）算法在进行机器学习的过程中需要用到极大似然估计等参数估计方法，在有潜在变量的情况下，通常选择EM算法，不是直接对函数对象进行极大估计，而是添加一些数据进行简化计算，再进行极大化模拟。它是对本身受限制或比较难直接处理的数据的极大似然估计算法。\n\n### 深度学习\n深度学习（DL，Deep Learning）是机器学习（ML，Machine Learning）领域中一个新的研究方向，它被引入机器学习使其更接近于最初的目标——人工智能（AI，Artificial Intelligence）。\n深度学习是学习样本数据的内在规律和表示层次，这些学习过程中获得的信息对诸如文字，图像和声音等数据的解释有很大的帮助。它的最终目标是让机器能够像人一样具有分析学习能力，能够识别文字、图像和声音等数据。 深度学习是一个复杂的机器学习算法，在语音和图像识别方面取得的效果，远远超过先前相关技术。\n深度学习在搜索技术、数据挖掘、机器学习、机器翻译、自然语言处理、多媒体学习、语音、推荐和个性化技术，以及其他相关领域都取得了很多成果。深度学习使机器模仿视听和思考等人类的活动，解决了很多复杂的模式识别难题，使得人工智能相关技术取得了很大进步。\n\n## 应用\n机器学习应用广泛，无论是在军事领域还是民用领域，都有机器学习算法施展的机会，主要包括以下几个方面。\n\n### 数据分析与挖掘\n“数据挖掘”和\"数据分析”通常被相提并论，并在许多场合被认为是可以相互替代的术语。关于数据挖掘，已有多种文字不同但含义接近的定义，例如“识别出巨量数据中有效的.新颖的、潜在有用的最终可理解的模式的非平凡过程”，无论是数据分析还是数据挖掘，都是帮助人们收集、分析数据，使之成为信息，并做出判断，因此可以将这两项合称为数据分析与挖掘。\n数据分析与挖掘技术是机器学习算法和数据存取技术的结合，利用机器学习提供的统计分析、知识发现等手段分析海量数据，同时利用数据存取机制实现数据的高效读写。机器学习在数据分析与挖掘领域中拥有无可取代的地位，2012年Hadoop进军机器学习领域就是一个很好的例子。\n\n### 模式识别\n模式识","n_tokens":"1200","document_ids":"['694fa61f290bdf7c971e7d100d5386c1']","entity_ids":"['8dc54cb7682244d7a234d55f1ae6c45f' '4c2b612be1964c069fc3620fa23b1e92'\n '44886411fdc24e6aa1b5b8e29418a4ad' '13b29f2fc31f4599bd9f500cfd7a932f'\n 'bd3f1b61b5274ef0841dc7d441b4d2f1' '6ac63e13d96544d893f0d45424144bbd'\n '4e9e7ae8917b4c4089b81a813cd2595e' 'f0899a970f274390b9a922ca6864e3d6'\n '17064adb08c4468abb077439a7650003' 'c839137f098246c4801d2899179282d5'\n 'e8a14452851c47ceb1d8a279f768adb3' 'ea56daba7fff4940af764c4fbcf7cd78']","relationship_ids":"['b38fc6d1b9f7454d82a273a9f5e2234d' '8ce2176fc5b3482dbc71b76d94e4e143'\n 'c7a3faf59f7c474282cfb6426677cfb7' 'fe493ee98f304b8a9e6a93f2b375c4af'\n '31837e3d1ca24d61bb8c1dff0af86c16' 'b4cf9a235c7f4566b95d76f7de89b441'\n '1b1afd332c5344e396e7f2598524519a' '452d4ba1637c4f19820cdce786486f41'\n '1c9b3c1d1ef240218eef8f757a306326' '43e0c179661f45e0b373c1387fa8e3a8']"},{"id":"70194aa11a28c19a9c09cf49d1aaa8b1","human_readable_id":"25","text":"知识发现等手段分析海量数据，同时利用数据存取机制实现数据的高效读写。机器学习在数据分析与挖掘领域中拥有无可取代的地位，2012年Hadoop进军机器学习领域就是一个很好的例子。\n\n### 模式识别\n模式识别起源于工程领域，而机器学习起源于计算机科学，这两个不同学科的结合带来了模式识别领域的调整和发展。模式识别研究主要集中在两个方面。\n（1）研究生物体（包括人）是如何感知对象的，属于认识科学的范畴。\n（2）在给定的任务下，如何用计算机实现模式识别的理论和方法，这些是机器学习的长项，也是机器学习研究的内容之一。\n模式识别的应用领域广泛，包括计算机视觉、医学图像分析、光学文字识别、自然语言处理、语音识别、手写识别、生物特征识别、文件分类、搜索引擎等，而这些领域也正是机器学习大展身手的舞台，因此模式识别与机器学习的关系越来越密切。\n\n### 在生物信息学上的应用\n随着基因组和其他测序项目的不断发展，生物信息学研究的重点正逐步从积累数据转移到如何解释这些数据。在未来，生物学的新发现将极大地依赖于在多个维度和不同尺度下对多样化的数据进行组合和关联的分析能力，而不再仅仅依赖于对传统领域的继续关注。序列数据将与结构和功能数据基因表达数据、生化反应通路数据表现型和临床数据等一系列数据相互集成。如此大量的数据，在生物信息的存储、获取、处理、浏览及可视化等方面，都对理论算法和软件的发展提出了迫切的需求。另外，由于基因组数据本身的复杂性也对理论算法和软件的发展提出了迫切的需求。而机器学习方法例如神经网络、遗传算法、决策树和支持向量机等正适合于处理这种数据量大、含有噪声并且缺乏统一理论的领域。\n\n### 更广阔的领域\n国外的IT巨头正在深入研究和应用机器学习，他们把目标定位于全面模仿人类大脑，试图创造出拥有人类智慧的机器大脑。\n2012年Google在人工智能领域发布了一个划时代的产品一人脑模拟软件，这个软件具备自我学习功能。模拟脑细胞的相互交流，可以通过看YouTube视频学习识别猫、人以及其他事物。当有数据被送达这个神经网络的时候，不同神经元之间的关系就会发生改变。而这也使得神经网络能够得到对某些特定数据的反应机制，据悉这个网络已经学到了一些东西，Google将有望在多个领域使用这一新技术，最先获益的可能是语音识别。\n\n### 具体应用\n（1）虚拟助手。Siri，Alexa，Google Now都是虚拟助手。顾名思义，当使用语音发出指令后，它们会协助查找信息。对于回答，虚拟助手会查找信息，回忆语音指令人员的相关查询，或向其他资源（如电话应用程序）发送命令以收集信息。人们甚至可以指导助手执行某些任务，例如“设置7点的闹钟”等。\n（2）交通预测。生活中人们经常使用GPS导航服务。当使用","n_tokens":"1200","document_ids":"['694fa61f290bdf7c971e7d100d5386c1']","entity_ids":"['dae971ad814b4c55be010b59db085cca' 'dbdd941357e04cda89791ecf29183be3'\n '8dc54cb7682244d7a234d55f1ae6c45f' '3453b4be80aa4d628c2cb74d9e07b392'\n '4c2b612be1964c069fc3620fa23b1e92' '7f04aa47f3c54d10ba58988f64147c69'\n 'bd3f1b61b5274ef0841dc7d441b4d2f1' 'ea56daba7fff4940af764c4fbcf7cd78'\n '9fada7290c984d7bb11b613cd918e94a' '15c663fe9a7d4200b465b450389ab575'\n '19e0855442314a5face6a964c0c9062d' '216ed1ef370f490ab72c54dc80654db7'\n '1f2cb914182b4b5e8598d4ea8041facb' 'dbf65b1e41154dee8ee6865dc34cb36e'\n '9200a5adefaa4224bfb6c6fa7cca1571' '65a50c5b578f489bb18b6bb67890dc57'\n 'e918401c9ce94275b15c471771dd7622' 'bce9c4a98dae436bb3493443dfc44c80'\n '63e86e04ad1d45088a33a240e9197dc2' '98cefc1704004ce2884265d0aff8b40c'\n '2675464b13834545855e73f269b23af5' '38d8308ea17e436abf0e51cc3028d930'\n 'dc9bc7f8e25d48a4b5154c997625940b' '32f94b8b9954429f8ff2d748f0b1f6d8'\n '34059dd612e148e587f8aa163357b79b' 'b1b91ea1a9a544faa88f151346b034d6']","relationship_ids":"['0e8821f42ff34ed687886c787d38332d' 'ee9704ba9dca45399bd1ee30cb3ee82b'\n 'b38fc6d1b9f7454d82a273a9f5e2234d' '339b5a9eda0e4c64b04a8cf196731e71'\n '7a31f86eb5b74e4ca63db77e3b775a98' '7014744b49004d659885cd67ce4e736e'\n '3550c2e79ee440689742791791e868ae' '57b23a96589443c4b10db0d91d1d0c96'\n '58360bc7d7d44729a51bb13e1437ec50' '7bd4b5b10f62441081884e09a16eb498'\n 'bf31a801fcfd47fba0b7c8ae3defc0da' 'e47f9b82c9614a4a8b73f8987ae28963'\n '2a7da4f6937543c0b595f0202d38aeb8' 'f4786632b6564fb5898da806e923378d'\n '7e31b7c118ce420fb56037bda4b21a68' '9c5b906c725b4e9a8b55ae389b7b1333'\n 'aa290af29a11474885f4b016ea6b662b' 'cd94ff0b2c4c437c939f9f1435c38c16'\n '6e15945f4d7a4b158eceb6626c017e01' '5f7885731ac8490b8b7cc17fe2bb6a87'\n '56a6399302ce4c90a57fd294d63bccd5' 'f2e4e045791a480e836c8d39c91ac746'\n '08d752cd8626443eb4b4613bd274e138' '4b61c08ef2944b5aa6255d8942ea3998']"},{"id":"5dc74bf1ed65c43eea13b5db4298c82d","human_readable_id":"26","text":"虚拟助手会查找信息，回忆语音指令人员的相关查询，或向其他资源（如电话应用程序）发送命令以收集信息。人们甚至可以指导助手执行某些任务，例如“设置7点的闹钟”等。\n（2）交通预测。生活中人们经常使用GPS导航服务。当使用GPS导航服务时，人们当前的位置和速度被保存在中央服务器上来进行流量管理。之后使用这些数据用于构建当前流量的映射。通过机器学习可以解决配备GPS的汽车数量较少的问题，在这种情况下的机器学习有助于根据估计找到拥挤的区域。\n（3）过滤垃圾邮件和恶意软件。电子邮件客户端使用了许多垃圾邮件过滤方法。为了确保这些垃圾邮件过滤器能够不断更新，它们使用了机器学习技术。多层感知器和决策树归纳等是由机器学习提供支持的一些垃圾邮件过滤技术。每天检测到超过325000个恶意软件，每个代码与之前版本的90%～98%相似。由机器学习驱动的系统安全程序理解编码模式。因此，他们可以轻松检测到2%～10%变异的新恶意软件，并提供针对它们的保护。\n（4）快速揭示细胞内部结构。借由高功率显微镜和机器学习，美国科学家研发出一种新算法，可在整个细胞的超高分辨率图像中自动识别大约30种不同类型的细胞器和其他结构。相关论文发表在最新一期的《自然》杂志上。\n（5）2022年，中国科学家利用机器学习的方法，快速得到相接双星的参数和误差。","n_tokens":"581","document_ids":"['694fa61f290bdf7c971e7d100d5386c1']","entity_ids":"['4c2b612be1964c069fc3620fa23b1e92' 'dbf65b1e41154dee8ee6865dc34cb36e'\n '9200a5adefaa4224bfb6c6fa7cca1571' 'ec4f120515b647279fe623353016b30a'\n '72c09799e03645919b4284c4f6a17576' '24fdbef72ecf40deabacdac0260ede6f'\n '6b3b28fe4927421f92242eb01bcaf03c' '66f984624f744e83a3999d6c51352128'\n '5c321e88a2f24d9d8dc662f562b982f7' 'c3dec1fdf3e041e1a7ed520a0798c7e4'\n '593e2f49da314679a73306adadf3b14b' '308ce61094324896b346aa3f2d6ee347'\n '46aab8b96b604e7491ef2eb35c726712' 'a7858ab7361049d2b7f66e1bff598d3f']","relationship_ids":"['cd94ff0b2c4c437c939f9f1435c38c16' '6e15945f4d7a4b158eceb6626c017e01'\n '5196d96c0f514f38ab79fc2d49bbd995' 'af54b869bc7c4b7c89660a448f5bcd66'\n '31cd17dbead0482083db9b361f06203b' '5a8b9bfc50b34b6087a026d9e6244e3a'\n '8847e935ead2495b8eaf0b5d68b16546' '2983966133e446a3b3248b65e58547cc'\n '6a07304895db45cca666812672c6b18e' '4aad8a339888424387498f5d5effff54'\n 'f2781d604ef546efa96456e907850c1e' '65b3470fe5064dacb8b1e837800fb11c'\n 'a8de7c3ab6f74f4481bf88a856bc93b6']"},{"id":"179cc8225255188181fd0dcd16661400","human_readable_id":"27","text":"数据清洗是指发现并纠正数据文件中可识别的错误的最后一道程序，包括检查数据一致性，处理无效值和缺失值等。与问卷审核不同，录入后的数据清理一般是由计算机而不是人工完成。\n\n## 基本概念\n数据清洗(Data cleaning)– 对数据进行重新审查和校验的过程，目的在于删除重复信息、纠正存在的错误，并提供数据一致性。\n数据清洗从名字上也看的出就是把“脏”的“洗掉”，指发现并纠正数据文件中可识别的错误的最后一道程序，包括检查数据一致性，处理无效值和缺失值等。因为数据仓库中的数据是面向某一主题的数据的集合，这些数据从多个业务系统中抽取而来而且包含历史数据，这样就避免不了有的数据是错误数据、有的数据相互之间有冲突，这些错误的或有冲突的数据显然是我们不想要的，称为“脏数据”。我们要按照一定的规则把“脏数据”“洗掉”，这就是数据清洗。而数据清洗的任务是过滤那些不符合要求的数据，将过滤的结果交给业务主管部门，确认是否过滤掉还是由业务单位修正之后再进行抽取。不符合要求的数据主要是有不完整的数据、错误的数据、重复的数据三大类。数据清洗是与问卷审核不同，录入后的数据清理一般是由计算机而不是人工完成。\n一致性检查\n一致性检查(consistency check)是根据每个变量的合理取值范围和相互关系，检查数据是否合乎要求，发现超出正常范围、逻辑上不合理或者相互矛盾的数据。例如，用1-7级量表测量的变量出现了0值，体重出现了负数，都应视为超出正常值域范围。SPSS、SAS、和Excel等计算机软件都能够根据定义的取值范围，自动识别每个超出范围的变量值。具有逻辑上不一致性的答案可能以多种形式出现：例如，许多调查对象说自己开车上班，又报告没有汽车；或者调查对象报告自己是某品牌的重度购买者和使用者，但同时又在熟悉程度量表上给了很低的分值。发现不一致时，要列出问卷序号、记录序号、变量名称、错误类别等，便于进一步核对和纠正。\n无效值和缺失值的处理\n由于调查、编码和录入误差，数据中可能存在一些无效值和缺失值，需要给予适当的处理。常用的处理方法有：估算，整例删除，变量删除和成对删除。\n估算(estimation)。最简单的办法就是用某个变量的样本均值、中位数或众数代替无效值和缺失值。这种办法简单，但没有充分考虑数据中已有的信息，误差可能较大。另一种办法就是根据调查对象对其他问题的答案，通过变量之间的相关分析或逻辑推论进行估计。例如，某一产品的拥有情况可能与家庭收入有关，可以根据调查对象的家庭收入推算拥有这一产品的可能性。\n整例删除(casewise deletion)是剔除含有缺失值的样本。由于很多问卷都可能存在缺失值，这种做法的结果可能导致有效样本量大大减少，无法充分利用已经收集到的数据。因此，只适合关键变量缺失，或者含有无效值或缺失值的样本比重很小的情况。\n变量删除(variable deletion)。如果某一变量的无效值和缺失值很多，而且该变量对于所研究的问题不是特别重","n_tokens":"1200","document_ids":"['df1fced8a58e8425a818ab3084e2cdd3']","entity_ids":"['0a27e55a05424a55904b2be21a62e850' '9e78b5885d314b66889fc4a1a88e5139'\n '4420b472c01f47a6acdf98557c593c4a' 'f20610b606dd4bf3890ff13e3ff38310'\n '79f2abda0b7b4e3c94959b5f7af324bc' '5823916a5d5a448995adbbfcd2950711'\n '88d61e81a14a4b6c8bf799f752387a03' '124adf9b1a824ce5989142c204ce14bb'\n 'abccae6b40d44a8ba9f8a360f9acbfa1' '43880a89d1974676adeffaaab2e9f56e'\n 'bc940e54d30146e5abcb3aae1c31ee15' '7d452ee5b73e42c08d2617417ef5d296'\n '91cb1716f4f74587b0b2785e13d697df' '63057c2eb7ca479e8ee18651e65932be']","relationship_ids":"['fc6d83fc4ea547bc883eaa478cd00eee' '293673e17da04097a607b2764ebddb0f'\n '91cbe16ecd094410b941edf890800daa' '383fea73efc14a5b9625338311624fc8'\n '69c90930db5f45eb98284168ed6f6133' 'ded02c3b2c1d4f10bf1a47a88a7117fd'\n '37d156a505b947dba073ad5d65dcd8fa' '32aca7e75c294bef88dd74f6e068b7d7'\n '276a9a8719c543f1b5ee484c80090c7f' 'd94bedcb5c7a47c2be832503baccbd06'\n '306287d6ece34344980f5c38d3125d3d' '51192706eac440cf8d8f5fa0887eab21'\n 'e68eb3cd2ecc4c9a8c3e733be7ed8ff5' 'ce3f9a708a7046d5ade01d517568894e'\n 'a0af4a5ca5124f25b4acfa9cb3650303']"},{"id":"0836460ed63d4b71fdc44e70cb3ec833","human_readable_id":"28","text":"充分利用已经收集到的数据。因此，只适合关键变量缺失，或者含有无效值或缺失值的样本比重很小的情况。\n变量删除(variable deletion)。如果某一变量的无效值和缺失值很多，而且该变量对于所研究的问题不是特别重要，则可以考虑将该变量删除。这种做法减少了供分析用的变量数目，但没有改变样本量。\n成对删除(pairwise deletion)是用一个特殊码(通常是9、99、999等)代表无效值和缺失值，同时保留数据集中的全部变量和样本。但是，在具体计算时只采用有完整答案的样本，因而不同的分析因涉及的变量不同，其有效样本量也会有所不同。这是一种保守的处理方法，最大限度地保留了数据集中的可用信息。\n采用不同的处理方法可能对分析结果产生影响，尤其是当缺失值的出现并非随机且变量之间明显相关时。因此，在调查中应当尽量避免出现无效值和缺失值，保证数据的完整性。\n\n## 数据清洗原理\n数据清洗原理:利用有关技术如数理统计、数据挖掘或预定义的清理规则将脏数据转化为满足数据质量要求的数据。\n数据清洗原理数据清洗原理\n\n## 主要类型\n\n### 残缺数据\n这一类数据主要是一些应该有的信息缺失，如供应商的名称、分公司的名称、客户的区域信息缺失、业务系统中主表与明细表不能匹配等。对于这一类数据过滤出来，按缺失的内容分别写入不同Excel文件向客户提交，要求在规定的时间内补全。补全后才写入数据仓库。\n\n### 错误数据\n这一类错误产生的原因是业务系统不够健全，在接收输入后没有进行判断直接写入后台数据库造成的，比如数值数据输成全角数字字符、字符串数据后面有一个回车操作、日期格式不正确、日期越界等。这一类数据也要分类，对于类似于全角字符、数据前后有不可见字符的问题，只能通过写SQL语句的方式找出来，然后要求客户在业务系统修正之后抽取。日期格式不正确的或者是日期越界的这一类错误会导致ETL运行失败，这一类错误需要去业务系统数据库用SQL的方式挑出来，交给业务主管部门要求限期修正，修正之后再抽取。\n\n### 重复数据\n对于这一类数据——特别是维表中会出现这种情况——将重复数据记录的所有字段导出来，让客户确认并整理。\n数据清洗是一个反复的过程，不可能在几天内完成，只有不断的发现问题，解决问题。对于是否过滤，是否修正一般要求客户确认，对于过滤掉的数据，写入Excel文件或者将过滤数据写入数据表，在ETL开发的初期可以每天向业务单位发送过滤数据的邮件，促使他们尽快地修正错误,同时也可以做为将来验证数据的依据。数据清洗需要注意的是不要将有用的数据过滤掉，对于每个过滤规则认真进行验证，并要用户确认。\n\n## 数据清洗方法\n一般来说，数据清理是将数据库精简以除去重复记录，并使剩余部分转换成标准可接收格式的过程。数据清理标准模型是将数据输入到数据清理处理器，通过一系列步骤“ 清理”数据，然后以期望的格式输出清理过的数据。数据清理从数据的准确性、完整性、一致性、惟一性、适时性、有效性几个方面来处理数据的丢失值、越界值、不一致代码、重复数据等问题。\n数据清理一般针对具体应用，因而难以归纳统一的方法和步骤，但是根据数据不同可以给出相应的数据清理方法。\n1.解�","n_tokens":"1200","document_ids":"['df1fced8a58e8425a818ab3084e2cdd3']","entity_ids":"['bef0bee22e424b55ab5e6dcff4d77144' '9e78b5885d314b66889fc4a1a88e5139'\n '4420b472c01f47a6acdf98557c593c4a' 'abccae6b40d44a8ba9f8a360f9acbfa1'\n '2e896c94f4934f1caf0b58f94f7472b1' 'e4b7c4a54d4a48b9b8849db5adddea80'\n 'd142da3e515147d3b226cf9255bbd933' '246374d77d3f4b4d853c9904f47e5253'\n 'd81c11fa3ba14a3ab690f08f7192921f' '63a11740c8e74e26961846c499758aeb'\n 'bf396255ae2f425082e11e3a2c4d3b15' '2af911759dc14669a2a39b1a01337e32'\n 'b07685ce745b40c98b1fc0aa8186fc98' 'a9f2d8fc90234136bb4c6ebeec57f3ca'\n '90d7ea1ff5f6428682d03b191dc7d2b3' '8358fddd48514aaf8ecb1d50ca8f896c'\n 'ccf5c71ec19c42a4b30ab3663a69cf03' 'ce047876e8b84b118a96d5c4975a69d1']","relationship_ids":"['a48b24e06ad14264bc8d2090762b69bc' '383fea73efc14a5b9625338311624fc8'\n 'd94bedcb5c7a47c2be832503baccbd06' '884216bda069495bb599811a44218a8f'\n '9691fe074ae84b86b578a086121659cf' '890aee64e32d41148944a96fd6519e27'\n 'e4040a56731f4a7288b001c7cd69381a' '08d918daed934dcca0f76aa1556da88f'\n '1ba19a96fec9404a802d4b1d9ef2069c' 'f7d50218fe704be29408eb286be5f69b'\n 'b4b2be96d4cc475e94d564e9343ffb90' 'e19c6ef965064cd58bf7e3d6f2df385a'\n 'd5dfdff10a1842dd8a2237e877804c11' 'b4e53cae0a434f9ab80ff1e82f1b5519'\n 'b76a9cd1bc44441d80b5bed9d1219f10' '06c471327c994362a9d4beb5ee74d792'\n '9ce51b8e9cfe43eea7f50185e88bc031']"},{"id":"f416d3f953d649a9313bd0176aac2e61","human_readable_id":"29","text":"、惟一性、适时性、有效性几个方面来处理数据的丢失值、越界值、不一致代码、重复数据等问题。\n数据清理一般针对具体应用，因而难以归纳统一的方法和步骤，但是根据数据不同可以给出相应的数据清理方法。\n1.解决不完整数据（ 即值缺失）的方法\n大多数情况下，缺失的值必须手工填入（ 即手工清理）。当然，某些缺失值可以从本数据源或其它数据源推导出来，这就可以用平均值、最大值、最小值或更为复杂的概率估计代替缺失的值，从而达到清理的目的。\n2.错误值的检测及解决方法\n用统计分析的方法识别可能的错误值或异常值，如偏差分析、识别不遵守分布或回归方程的值，也可以用简单规则库（常识性规则、业务特定规则等）检查数据值，或使用不同属性间的约束、外部的数据来检测和清理数据。\n3.重复记录的检测及消除方法\n数据库中属性值相同的记录被认为是重复记录，通过判断记录间的属性值是否相等来检测记录是否相等，相等的记录合并为一条记录（即合并/清除）。合并/清除是消重的基本方法。\n4.不一致性（ 数据源内部及数据源之间）的检测及解决方法\n从多数据源集成的数据可能有语义冲突，可定义完整性约束用于检测不一致性，也可通过分析数据发现联系，从而使得数据保持一致。开发的数据清理工具大致可分为三类。\n数据迁移工具允许指定简单的转换规则，如：将字符串gender替换成sex。sex公司的PrismWarehouse是一个流行的工具，就属于这类。\n数据清洗工具使用领域特有的知识（ 如，邮政地址）对数据作清洗。它们通常采用语法分析和模糊匹配技术完成对多数据源数据的清理。某些工具可以指明源的“ 相对清洁程度”。工具Integrity和Trillum属于这一类。\n数据审计工具可以通过扫描数据发现规律和联系。因此，这类工具可以看作是数据挖掘工具的变形。","n_tokens":"704","document_ids":"['df1fced8a58e8425a818ab3084e2cdd3']","entity_ids":"['246374d77d3f4b4d853c9904f47e5253' '2af911759dc14669a2a39b1a01337e32'\n 'b07685ce745b40c98b1fc0aa8186fc98' 'a9f2d8fc90234136bb4c6ebeec57f3ca'\n '20f68b98c23e412bac45ac02d561278d' 'e60fc7e531b7416eb4f26a07082ee5a6'\n 'e535998825d847ec93179f9ae31db0a2' '30672036530b4699884d55fc397f3531'\n '61a405b24a63462cba57ea07691b32e4' 'aa659f7d2c024948b13f6b807c23f3b4'\n '3269cdc9ca6e4135bdfcda27f245c484' '1a6d1e7cebfa40bd84b9b062f8f12689'\n '35ce0c902bc54c8fb13b9228e65f22ab' '15cbf343d75c4187b8bc0699d144285d'\n 'c963b775baaa42ef93f2c513fe98b84e' '0bc0b540568d4d5ebde02a35a698ceeb'\n 'd8c343324bde4c59b5c96d1a1d8acbb5' '142b904c90fd4a9f81bbdff04aa337ca'\n 'd5c2101fcbe3485f998c3f61bb532ad0' '7164f226ebbc493c8e4299d641b5d13a'\n '44344b750f64470d8b9e93c42f0803c5' '564eb2c1411442c19dd670610203cff5'\n '14e453d4164747b399e48d2be4446eb0' 'fdb0eebee8434616b82623c1c98113aa'\n 'c92fad108d03471b9191fe4871bd644a' '8fe66be6cd7c46769252ee63515d8700'\n '0057e5dcc4b24ad59c45ff93738e2cbe' 'af90d5bf259d4b46ad1c22a7b5313914']","relationship_ids":"['1ab947d3b86746c8ad532638867de23a' '6fb119f9d2f74e038356a5dab3466890'\n 'd003e5d7512b4e70adf7d5a212325fec' 'd08dfe14219b403f8576869f7dac0bba'\n '32ffba54c9954d37b555f02367dc642d' 'db21ce386ea845029ffdf44df807d758'\n 'ae66d5e774534eeaad4cdf31dd27c33e' 'e2c2cf295b334a4982c4cb0045ec872d'\n '3ed08a66b6fb449e98295ef25b8d3a1e' '95668d22443149a9963887df81999446'\n 'd37ff77c1ae944b280375020261973f0' '6e5d2b070213481da4960e85cd97ec17'\n '2ff22c9313b94b6e9bb4f7cff7cc2d1c' '9c695e16160a46f39a5437349cb40344'\n '99e56fa7de4b471b8d70f935f533b465' '7b6a53e3a0e5420a8a53073849a9d76b'\n 'f1a18b9d54a44f87a2fa2ee7ce84ded6' '541aa2c82a984cc58776dff46376e7d9'\n '172ed6afd8be4c53a72466dde2e54055' '6cfa8be7dde34f0fa06782fc53b5c39e'\n '94627fd7b33f4ecab1a08077a61675d5' '5d6f7c38801041ac998722b020bef20b'\n '7a753a67e2dd486ab3435048c6191ace' '84b528a20b514edf9a66901ffea6b78b'\n '1f1b7fae4070433fa9c6e5afe74407a4' '9a2d0fb7f67245c3b9da9e64e667813d'\n '3cd8fc43fb5946f990b0e9613574e007']"}]